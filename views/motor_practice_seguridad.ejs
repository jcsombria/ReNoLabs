<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title></title>
       <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
	<link href='/stylesheets/template_routes.css' rel='stylesheet'>
    <link rel="stylesheet"  type="text/css" href="_ejs_library/css/ejsSimulation.css" />
    <script src="/scripts/common_script.js"></script>
    <script src="/scripts/textresizedetector.js"></script>
    <script src="/scripts/ejsS.v1.min.js"></script>
    
    <script src="/socket.io/socket.io.js"></script>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
function quad_practice_20(_topFrame,_libraryPath,_codebasePath) {
  var _model = EJSS_CORE.createAnimation();
  var _view;
  var _isPlaying = false;
  var _isPaused = true;
  var _isMobile = (navigator===undefined) ? false : navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);

var _stringProperties = {};
  var _tools = {
    showInputDialog : EJSS_INTERFACE.BoxPanel.showInputDialog,
    showOkDialog : EJSS_INTERFACE.BoxPanel.showOkDialog,
    showOkCancelDialog : EJSS_INTERFACE.BoxPanel.showOkCancelDialog
  };

  function _play()  { _isPaused = false; _isPlaying = true;  _model.play();  }
  function _pause() { _isPaused = true;  _isPlaying = false; _model.pause(); }
  function _step()  { _pause();  _model.step(); }
  function _reset() { _model.reset();  _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); }
  function _update() { _model.update(); }
  function _initialize() { _model.initialize(); }
  function _setFPS(_fps) { _model.setFPS(_fps); }
  function _setDelay(_delay) { _model.setDelay(_delay); }
  function _setStepsPerDisplay(_spd) { _model.setStepsPerDisplay(_spd); }
  function _setUpdateView(_updateView) { _model.setUpdateView(_updateView); }
  function _setAutoplay(_auto) { _model.setAutoplay(_auto); }
  function _println(_message) { console.log(_message); }

  function _breakAfterThisPage() { _model.setShouldBreak(true); }

  function _resetSolvers() { if (_model.resetSolvers) _model.resetSolvers(); }

  function _saveText(name,type,content) { if (_model.saveText) _model.saveText(name,type,content); }

  function _saveState(name) { if (_model.saveState) _model.saveState(name); }

  function _saveImage(name,panelname) { if (_model.saveImage) _model.saveImage(name,panelname); }

  function _readState(url,type) { if (_model.readState) _model.readState(url,type); }

  function _readText(url,type,varname) { if (_model.readText) _model.readText(url,type,varname); }

function _getStringProperty(propertyName) {
  var _value = _stringProperties[propertyName];
  if (_value===undefined) return propertyName;
  else return _value;
}
  var __pagesEnabled = [];
  function _setPageEnabled(pageName,enabled) { __pagesEnabled[pageName] = enabled; }

  var w_buttons; // EjsS Model.Variables.view_variables.w_buttons
  var h_buttons; // EjsS Model.Variables.view_variables.h_buttons
  var w_Ncontroller; // EjsS Model.Variables.view_variables.w_Ncontroller
  var h_Ncontroller; // EjsS Model.Variables.view_variables.h_Ncontroller
  var w_TController; // EjsS Model.Variables.view_variables.w_TController
  var h_TController; // EjsS Model.Variables.view_variables.h_TController
  var w_Nfunction; // EjsS Model.Variables.view_variables.w_Nfunction
  var h_Nfunction; // EjsS Model.Variables.view_variables.h_Nfunction
  var w_Tfunction; // EjsS Model.Variables.view_variables.w_Tfunction
  var w_Tfunction3; // EjsS Model.Variables.view_variables.w_Tfunction3
  var h_Tfunction; // EjsS Model.Variables.view_variables.h_Tfunction
  var font_style; // EjsS Model.Variables.view_variables.font_style
  var graph_0; // EjsS Model.Variables.view_variables.graph_0
  var graph_u; // EjsS Model.Variables.view_variables.graph_u
  var graph_p; // EjsS Model.Variables.view_variables.graph_p
  var graph_r; // EjsS Model.Variables.view_variables.graph_r
  var graph_y; // EjsS Model.Variables.view_variables.graph_y
  var referenceMove; // EjsS Model.Variables.view_variables.referenceMove
  var referenceSelect; // EjsS Model.Variables.view_variables.referenceSelect
  var referenceMode; // EjsS Model.Variables.view_variables.referenceMode
  var referenceSelect_p; // EjsS Model.Variables.view_variables.referenceSelect_p
  var referenceSelect_r; // EjsS Model.Variables.view_variables.referenceSelect_r
  var referenceSelect_y; // EjsS Model.Variables.view_variables.referenceSelect_y
  var controllerMode; // EjsS Model.Variables.view_variables.controllerMode
  var controllerSelect; // EjsS Model.Variables.view_variables.controllerSelect
  var controllerModePID; // EjsS Model.Variables.view_variables.controllerModePID
  var controllerSelectPID; // EjsS Model.Variables.view_variables.controllerSelectPID
  var button_state; // EjsS Model.Variables.view_variables.button_state
  var windowElement; // EjsS Model.Variables.view_variables.windowElement

  function _serialize() { return _model.serialize(); }

  _model._userSerialize = function() {
    return {
      w_buttons : w_buttons,
      h_buttons : h_buttons,
      w_Ncontroller : w_Ncontroller,
      h_Ncontroller : h_Ncontroller,
      w_TController : w_TController,
      h_TController : h_TController,
      w_Nfunction : w_Nfunction,
      h_Nfunction : h_Nfunction,
      w_Tfunction : w_Tfunction,
      w_Tfunction3 : w_Tfunction3,
      h_Tfunction : h_Tfunction,
      font_style : font_style,
      graph_0 : graph_0,
      graph_u : graph_u,
      graph_p : graph_p,
      graph_r : graph_r,
      graph_y : graph_y,
      referenceMove : referenceMove,
      referenceSelect : referenceSelect,
      referenceMode : referenceMode,
      referenceSelect_p : referenceSelect_p,
      referenceSelect_r : referenceSelect_r,
      referenceSelect_y : referenceSelect_y,
      controllerMode : controllerMode,
      controllerSelect : controllerSelect,
      controllerModePID : controllerModePID,
      controllerSelectPID : controllerSelectPID,
      button_state : button_state,
      windowElement : windowElement
    };
  };

  function _unserialize(json) { return _model.unserialize(json); }

  _model._userUnserialize = function(json) {
    if(typeof json.w_buttons != "undefined") w_buttons = json.w_buttons;
    if(typeof json.h_buttons != "undefined") h_buttons = json.h_buttons;
    if(typeof json.w_Ncontroller != "undefined") w_Ncontroller = json.w_Ncontroller;
    if(typeof json.h_Ncontroller != "undefined") h_Ncontroller = json.h_Ncontroller;
    if(typeof json.w_TController != "undefined") w_TController = json.w_TController;
    if(typeof json.h_TController != "undefined") h_TController = json.h_TController;
    if(typeof json.w_Nfunction != "undefined") w_Nfunction = json.w_Nfunction;
    if(typeof json.h_Nfunction != "undefined") h_Nfunction = json.h_Nfunction;
    if(typeof json.w_Tfunction != "undefined") w_Tfunction = json.w_Tfunction;
    if(typeof json.w_Tfunction3 != "undefined") w_Tfunction3 = json.w_Tfunction3;
    if(typeof json.h_Tfunction != "undefined") h_Tfunction = json.h_Tfunction;
    if(typeof json.font_style != "undefined") font_style = json.font_style;
    if(typeof json.graph_0 != "undefined") graph_0 = json.graph_0;
    if(typeof json.graph_u != "undefined") graph_u = json.graph_u;
    if(typeof json.graph_p != "undefined") graph_p = json.graph_p;
    if(typeof json.graph_r != "undefined") graph_r = json.graph_r;
    if(typeof json.graph_y != "undefined") graph_y = json.graph_y;
    if(typeof json.referenceMove != "undefined") referenceMove = json.referenceMove;
    if(typeof json.referenceSelect != "undefined") referenceSelect = json.referenceSelect;
    if(typeof json.referenceMode != "undefined") referenceMode = json.referenceMode;
    if(typeof json.referenceSelect_p != "undefined") referenceSelect_p = json.referenceSelect_p;
    if(typeof json.referenceSelect_r != "undefined") referenceSelect_r = json.referenceSelect_r;
    if(typeof json.referenceSelect_y != "undefined") referenceSelect_y = json.referenceSelect_y;
    if(typeof json.controllerMode != "undefined") controllerMode = json.controllerMode;
    if(typeof json.controllerSelect != "undefined") controllerSelect = json.controllerSelect;
    if(typeof json.controllerModePID != "undefined") controllerModePID = json.controllerModePID;
    if(typeof json.controllerSelectPID != "undefined") controllerSelectPID = json.controllerSelectPID;
    if(typeof json.button_state != "undefined") button_state = json.button_state;
    if(typeof json.windowElement != "undefined") windowElement = json.windowElement;
   _resetSolvers();
   _model.update();
  };

  _model.addToReset(function() {
    __pagesEnabled["Init1"] = true;
    __pagesEnabled["Evol Page"] = true;
    __pagesEnabled["FixRel Page"] = true;
  });

  _model.addToReset(function() {
    w_buttons = 120; // EjsS Model.Variables.view_variables.w_buttons
    h_buttons = 50; // EjsS Model.Variables.view_variables.h_buttons
    w_Ncontroller = 150; // EjsS Model.Variables.view_variables.w_Ncontroller
    h_Ncontroller = 25; // EjsS Model.Variables.view_variables.h_Ncontroller
    w_TController = 100; // EjsS Model.Variables.view_variables.w_TController
    h_TController = 25; // EjsS Model.Variables.view_variables.h_TController
    w_Nfunction = 80; // EjsS Model.Variables.view_variables.w_Nfunction
    h_Nfunction = 25; // EjsS Model.Variables.view_variables.h_Nfunction
    w_Tfunction = 100; // EjsS Model.Variables.view_variables.w_Tfunction
    w_Tfunction3 = 300; // EjsS Model.Variables.view_variables.w_Tfunction3
    h_Tfunction = 25; // EjsS Model.Variables.view_variables.h_Tfunction
    font_style = "normal bold 16px"; // EjsS Model.Variables.view_variables.font_style
    graph_0 = false; // EjsS Model.Variables.view_variables.graph_0
    graph_u = true; // EjsS Model.Variables.view_variables.graph_u
    graph_p = false; // EjsS Model.Variables.view_variables.graph_p
    graph_r = false; // EjsS Model.Variables.view_variables.graph_r
    graph_y = false; // EjsS Model.Variables.view_variables.graph_y
    referenceMove = ["Pitch", "Roll", "Yaw"]; // EjsS Model.Variables.view_variables.referenceMove
    referenceSelect = "Pitch"; // EjsS Model.Variables.view_variables.referenceSelect
    referenceMode = ["Step", "Square", "Triangular", "Sin", "Impulse", "Extern"]; // EjsS Model.Variables.view_variables.referenceMode
    referenceSelect_p = "Sin"; // EjsS Model.Variables.view_variables.referenceSelect_p
    referenceSelect_r = "Sin"; // EjsS Model.Variables.view_variables.referenceSelect_r
    referenceSelect_y = "Sin"; // EjsS Model.Variables.view_variables.referenceSelect_y
    controllerMode = ["Manual", "PID", "FL", "SL"]; // EjsS Model.Variables.view_variables.controllerMode
    controllerSelect = "Manual"; // EjsS Model.Variables.view_variables.controllerSelect
    controllerModePID = ["Pitch,Roll", "Yaw"]; // EjsS Model.Variables.view_variables.controllerModePID
    controllerSelectPID = "Pitch,Roll"; // EjsS Model.Variables.view_variables.controllerSelectPID
    button_state = new Array(4); // EjsS Model.Variables.view_variables.button_state
    windowElement = 100; // EjsS Model.Variables.view_variables.windowElement
  });

  _model.addToReset(function() {
    _model.setAutoplay(true);
    _model.setPauseOnPageExit(false);
    _model.setFPS(20);
    _model.setStepsPerDisplay(1);
  });

    var key_ejs =  <%- JSON.stringify(key) %>;  // > CustomCode.comunication_functions:1
    var ip_ejs =  <%- JSON.stringify(ip) %>;  // > CustomCode.comunication_functions:2
    var port_ejs =  <%- JSON.stringify(port) %>;  // > CustomCode.comunication_functions:3
  var state_EJS = {reference:   // > CustomCode.comunication_functions:4
                    {   // > CustomCode.comunication_functions:5
                    Pitch:{Tipo:0,  // > CustomCode.comunication_functions:6
                           param:[40, 0, 0, 0] //Periodo, Amplitud, OffsetY, OffsetP]  // > CustomCode.comunication_functions:7
                           },  // > CustomCode.comunication_functions:8
                    Roll:{Tipo:0,  // > CustomCode.comunication_functions:9
                           param:[40, 0, 0, 0] //Periodo, Amplitud, OffsetY, OffsetP]  // > CustomCode.comunication_functions:10
                           },  // > CustomCode.comunication_functions:11
                    Yaw:{Tipo:0,  // > CustomCode.comunication_functions:12
                           param:[40, 0, 0, 0] //Periodo, Amplitud, OffsetY, OffsetP]  // > CustomCode.comunication_functions:13
                           },  // > CustomCode.comunication_functions:14
                    },  // > CustomCode.comunication_functions:15
                     controller:{  // > CustomCode.comunication_functions:16
                     Tipo:0,  // > CustomCode.comunication_functions:17
                     RealSys:0,  // > CustomCode.comunication_functions:18
                     T:0.01,  // > CustomCode.comunication_functions:19
                      PIDPR:[0.8861,  1.0835, 0.3374, 0.31620], //[Kp, Ki, Kd, N, Error]  // > CustomCode.comunication_functions:20
                     PIDY:[4.3088, 9.1306, 0.56416, 1.0], //[Kp, Ki, Kd, N, Error]  // > CustomCode.comunication_functions:21
                     FL:{  // > CustomCode.comunication_functions:22
                       K:"[1.5451,0,0,1.8276,0,0;0,1.5451,0,0,1.8276,0;0,0,0.6308,0,0,1.2295]",                 // > CustomCode.comunication_functions:23
                       }  // > CustomCode.comunication_functions:24
                     }  // > CustomCode.comunication_functions:25
  };  // > CustomCode.comunication_functions:26
  var state_REAL = {config: 0, //[0: disconnected, 1: ready, 2: play, 3: pause, 4: reset]  // > CustomCode.comunication_functions:27
                    evolution: [0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0], //[t,u,y,v,r]  // > CustomCode.comunication_functions:28
                    reference:   // > CustomCode.comunication_functions:29
                    {   // > CustomCode.comunication_functions:30
                    Pitch:{Tipo:0,  // > CustomCode.comunication_functions:31
                           param:[40, 0, 0, 0] //Periodo, Amplitud, OffsetY, OffsetP]  // > CustomCode.comunication_functions:32
                           },  // > CustomCode.comunication_functions:33
                    Roll:{Tipo:0,  // > CustomCode.comunication_functions:34
                           param:[40, 0, 0, 0] //Periodo, Amplitud, OffsetY, OffsetP]  // > CustomCode.comunication_functions:35
                           },  // > CustomCode.comunication_functions:36
                     Yaw:{Tipo:0,  // > CustomCode.comunication_functions:37
                           param:[40, 0, 0, 0] //Periodo, Amplitud, OffsetY, OffsetP]  // > CustomCode.comunication_functions:38
                           },  // > CustomCode.comunication_functions:39
                     },  // > CustomCode.comunication_functions:40
                     controller:{  // > CustomCode.comunication_functions:41
                     Tipo:0,  // > CustomCode.comunication_functions:42
                     RealSys:0,  // > CustomCode.comunication_functions:43
                     T:0.01,  // > CustomCode.comunication_functions:44
                     PIDPR:[0.8861,  1.0835, 0.3374, 0.31620], //[Kp, Ki, Kd, N, Error]  // > CustomCode.comunication_functions:45
                     PIDY:[4.3088, 9.1306, 0.56416, 1.0], //[Kp, Ki, Kd, N, Error]  // > CustomCode.comunication_functions:46
                     FL:{  // > CustomCode.comunication_functions:47
                       K:"[1.5451,0,0,1.8276,0,0;0,1.5451,0,0,1.8276,0;0,0,0.6308,0,0,1.2295]",                 // > CustomCode.comunication_functions:48
                       }  // > CustomCode.comunication_functions:49
                     }  // > CustomCode.comunication_functions:50
  };  // > CustomCode.comunication_functions:51
  var first = {  // > CustomCode.comunication_functions:52
               reference: true,  // > CustomCode.comunication_functions:53
               controller: true,  // > CustomCode.comunication_functions:54
               };  // > CustomCode.comunication_functions:55
  //var socket = io.connect('http://147.96.67.98:8080');  // > CustomCode.comunication_functions:56
  //var socket = io.connect('http://147.96.71.236:8080', { query: 'key='+key_ejs });  // > CustomCode.comunication_functions:57
    var socket = io.connect(ip_ejs + ":" + port_ejs, { query: 'key='+key_ejs });  // > CustomCode.comunication_functions:58
                 // > CustomCode.comunication_functions:59
  function send_state (variable) {  // > CustomCode.comunication_functions:60
        socket.emit('clientOut_serverIn', {variable: variable, value: state_EJS[variable]});  // > CustomCode.comunication_functions:61
        // > CustomCode.comunication_functions:62
  };  // > CustomCode.comunication_functions:63
  function send_connect (variable) {  // > CustomCode.comunication_functions:64
      var temp = [0];  // > CustomCode.comunication_functions:65
      temp[0] = variable;  // > CustomCode.comunication_functions:66
        socket.emit('clientOut_serverIn', {variable: 'config', value: temp});  // > CustomCode.comunication_functions:67
  };  // > CustomCode.comunication_functions:68
      // > CustomCode.comunication_functions:69
    socket.on('serverOut_clientIn', function(data) {  // > CustomCode.comunication_functions:70
  //UUNCOMMENT     if (data.variable in first){    // > CustomCode.comunication_functions:71
  //UUNCOMMENT     if (first[data.variable]){    // > CustomCode.comunication_functions:72
  //UUNCOMMENT           state_EJS[data.variable]=data.value;    // > CustomCode.comunication_functions:73
  //UUNCOMMENT           first[data.variable]=false;     // > CustomCode.comunication_functions:74
  //UUNCOMMENT             // > CustomCode.comunication_functions:75
  //UUNCOMMENT      } else state_REAL[data.variable] = data.value;  // > CustomCode.comunication_functions:76
  //UUNCOMMENT      } else state_REAL[data.variable] = data.value;  // > CustomCode.comunication_functions:77
         state_REAL[data.variable] = data.value;  // > CustomCode.comunication_functions:78
        _view._update();  // > CustomCode.comunication_functions:79
    });  // > CustomCode.comunication_functions:80
      // > CustomCode.comunication_functions:81
    socket.on('disconnect_timeout', function(data) {  // > CustomCode.comunication_functions:82
        alert(data.text);  // > CustomCode.comunication_functions:83
        window.location = "./select";  // > CustomCode.comunication_functions:84
    });  // > CustomCode.comunication_functions:85
      // > CustomCode.comunication_functions:86

  function select_update_reference(str,special) {  // > CustomCode.update_functions:1
      var referencia=referenceSelect_y;  // > CustomCode.update_functions:2
      if (str=='Pitch')  // > CustomCode.update_functions:3
        referencia=referenceSelect_p;  // > CustomCode.update_functions:4
      else if (str=='Roll')  // > CustomCode.update_functions:5
        referencia=referenceSelect_r;  // > CustomCode.update_functions:6
      if (special==1)  // > CustomCode.update_functions:7
      { if (referencia=='Extern')  // > CustomCode.update_functions:8
          return false;  // > CustomCode.update_functions:9
        else  // > CustomCode.update_functions:10
          return true;  // > CustomCode.update_functions:11
      }  // > CustomCode.update_functions:12
      else{  // > CustomCode.update_functions:13
      if (referencia=='Step' || referencia=='Extern' )  // > CustomCode.update_functions:14
          return false;  // > CustomCode.update_functions:15
      else  // > CustomCode.update_functions:16
          return true;  }    // > CustomCode.update_functions:17
      // > CustomCode.update_functions:18
  };  // > CustomCode.update_functions:19
  function color_update_reference (str,i) {  // > CustomCode.update_functions:20
      // > CustomCode.update_functions:21
   if (i=='Tipo')  // > CustomCode.update_functions:22
    { if (state_REAL.reference[str]['Tipo'] != state_EJS.reference[str]['Tipo'])  // > CustomCode.update_functions:23
      return "Yellow";  // > CustomCode.update_functions:24
      else  // > CustomCode.update_functions:25
       return "White";  // > CustomCode.update_functions:26
    }  // > CustomCode.update_functions:27
    else{  // > CustomCode.update_functions:28
    if (state_REAL.reference[str]['param'][i] != state_EJS.reference[str]['param'][i])  // > CustomCode.update_functions:29
      return "Yellow";  // > CustomCode.update_functions:30
    else  // > CustomCode.update_functions:31
      return "White";  // > CustomCode.update_functions:32
    }  // > CustomCode.update_functions:33
  };  // > CustomCode.update_functions:34
  function color_update_controller (str,i) {  // > CustomCode.update_functions:35
    if (str=='Tipo')  // > CustomCode.update_functions:36
    {  // > CustomCode.update_functions:37
      if (state_REAL.controller.Tipo != state_EJS.controller.Tipo)  // > CustomCode.update_functions:38
        return "Yellow";  // > CustomCode.update_functions:39
      else  // > CustomCode.update_functions:40
         return "White";  // > CustomCode.update_functions:41
    }  // > CustomCode.update_functions:42
    else  // > CustomCode.update_functions:43
    {  // > CustomCode.update_functions:44
      if (state_REAL.controller[str][i] != state_EJS.controller[str][i])  // > CustomCode.update_functions:45
        return "Yellow";  // > CustomCode.update_functions:46
      else  // > CustomCode.update_functions:47
        return "White";  // > CustomCode.update_functions:48
    }  // > CustomCode.update_functions:49
  };  // > CustomCode.update_functions:50
  function update () {  // > CustomCode.update_functions:51
      for (key in state_EJS) {  // > CustomCode.update_functions:52
        if (state_REAL[key] != state_EJS[key]) {  // > CustomCode.update_functions:53
          send_state(key);    // > CustomCode.update_functions:54
        }  // > CustomCode.update_functions:55
      }  // > CustomCode.update_functions:56
  };  // > CustomCode.update_functions:57

  _model.addToInitialization(function() {
    if (!__pagesEnabled["Init1"]) return;
    select_update_reference('Pitch',0);  // > Initialization.Init1:1
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["Evol Page"]) return;
    /*state_REAL.signal[0] = state_REAL.signal[0]+0.01;  // > Evolution.Evol Page:1
    state_REAL.signal[1] = state_REAL.signal[0]*state_REAL.signal[0];  // > Evolution.Evol Page:2
    state_REAL.signal[2] = state_REAL.signal[0];*/  // > Evolution.Evol Page:3
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["FixRel Page"]) return;
    for (var i = 0; i < referenceMode.length; i++) {  // > FixedRelations.FixRel Page:1
      if (referenceSelect_p == referenceMode[i])  // > FixedRelations.FixRel Page:2
        state_EJS.reference.Pitch.Tipo = i;  // > FixedRelations.FixRel Page:3
      if (referenceSelect_y == referenceMode[i])  // > FixedRelations.FixRel Page:4
        state_EJS.reference.Yaw.Tipo = i;  // > FixedRelations.FixRel Page:5
        // > FixedRelations.FixRel Page:6
      if (referenceSelect_r == referenceMode[i])  // > FixedRelations.FixRel Page:7
        state_EJS.reference.Roll.Tipo = i;  // > FixedRelations.FixRel Page:8
        // > FixedRelations.FixRel Page:9
    }  // > FixedRelations.FixRel Page:10
    for (var i = 0; i < controllerMode.length; i++) {  // > FixedRelations.FixRel Page:11
      if (controllerSelect == controllerMode[i])  // > FixedRelations.FixRel Page:12
        state_EJS.controller.Tipo = i;  // > FixedRelations.FixRel Page:13
    }  // > FixedRelations.FixRel Page:14
    switch (state_REAL.config) {  // > FixedRelations.FixRel Page:15
      case 0:  // > FixedRelations.FixRel Page:16
        button_state = [0, 0, 0, 0];  // > FixedRelations.FixRel Page:17
        break;  // > FixedRelations.FixRel Page:18
      case 1: //En espera  // > FixedRelations.FixRel Page:19
        button_state = [1, 1, 0, 0];  // > FixedRelations.FixRel Page:20
        break;  // > FixedRelations.FixRel Page:21
      case 2: //Play  // > FixedRelations.FixRel Page:22
        button_state = [1, 0, 1, 1];  // > FixedRelations.FixRel Page:23
        break;  // > FixedRelations.FixRel Page:24
      case 3: //Pause  // > FixedRelations.FixRel Page:25
        button_state = [1, 1, 0, 1];  // > FixedRelations.FixRel Page:26
        break;  // > FixedRelations.FixRel Page:27
    }  // > FixedRelations.FixRel Page:28
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

    _model._resized = function(_width,_height) {
      _view._resized(_width,_height);
  }; // end of _resized
    _model._fontResized = function(iBase,iSize,iDelta) {
      _view._fontResized(iBase,iSize,iDelta);
  }; // end of _fontResized

  function _getViews() {
    var _viewsInfo = [];
    var _counter = 0;
    _viewsInfo[_counter++] = { name : "HtmlView Page", width : 800, height : 600 };
    return _viewsInfo;
  } // end of _getViews

  function _selectView(_viewNumber) {
    _view = null;
    _view = new quad_practice_20_View(_topFrame,_viewNumber,_libraryPath,_codebasePath);
    var _view_super_reset = _view._reset;
    _view._reset = function() {
      _view_super_reset();
      switch(_viewNumber) {
        case -10 : break; // make Lint happy
        default :
        case 0:
          _view.htmlArea.linkProperty("Display",  function() {
      if (graph_0) {return "inline"} else {return "none"}  // > htmlArea.Display:1
      ;    }); // HtmlView Page linking property 'Display' for element 'htmlArea'
          _view.evolution_graph_u.setAction("OnDoubleClick", _view._reset); // HtmlView Page setting action 'OnDoubleClick' for element 'evolution_graph_u'
          _view.evolution_graph_u.linkProperty("Display",  function() {
      if (graph_u) {return "inline"} else {return "none"}  // > evolution_graph_u.Display:1
      ;    }); // HtmlView Page linking property 'Display' for element 'evolution_graph_u'
          _view.t_r.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_r'
          _view.t_r.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_r'
          _view.t_r.linkProperty("InputY",  function() { return state_REAL.evolution[10]; } ); // HtmlView Page linking property 'InputY' for element 't_r'
          _view.t_u.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_u'
          _view.t_u.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_u'
          _view.t_u.linkProperty("InputY",  function() { return state_REAL.evolution[11]; } ); // HtmlView Page linking property 'InputY' for element 't_u'
          _view.t_y.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_y'
          _view.t_y.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_y'
          _view.t_y.linkProperty("InputY",  function() { return state_REAL.evolution[12]; } ); // HtmlView Page linking property 'InputY' for element 't_y'
          _view.t_y5.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_y5'
          _view.t_y5.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_y5'
          _view.t_y5.linkProperty("InputY",  function() { return state_REAL.evolution[13]; } ); // HtmlView Page linking property 'InputY' for element 't_y5'
          _view.evolution_graph_p.setAction("OnDoubleClick", _view._reset); // HtmlView Page setting action 'OnDoubleClick' for element 'evolution_graph_p'
          _view.evolution_graph_p.linkProperty("Display",  function() {
      if (graph_p) {return "inline"} else {return "none"}  // > evolution_graph_p.Display:1
      ;    }); // HtmlView Page linking property 'Display' for element 'evolution_graph_p'
          _view.t_r2.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_r2'
          _view.t_r2.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_r2'
          _view.t_r2.linkProperty("InputY",  function() { return state_REAL.evolution[7]; } ); // HtmlView Page linking property 'InputY' for element 't_r2'
          _view.t_u2.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_u2'
          _view.t_u2.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_u2'
          _view.t_u2.linkProperty("InputY",  function() { return state_REAL.evolution[1]; } ); // HtmlView Page linking property 'InputY' for element 't_u2'
          _view.t_y2.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_y2'
          _view.t_y2.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_y2'
          _view.t_y2.linkProperty("InputY",  function() { return state_REAL.evolution[4]; } ); // HtmlView Page linking property 'InputY' for element 't_y2'
          _view.evolution_graph_r.setAction("OnDoubleClick", _view._reset); // HtmlView Page setting action 'OnDoubleClick' for element 'evolution_graph_r'
          _view.evolution_graph_r.linkProperty("Display",  function() {
      if (graph_r) {return "inline"} else {return "none"}  // > evolution_graph_r.Display:1
      ;    }); // HtmlView Page linking property 'Display' for element 'evolution_graph_r'
          _view.t_r22.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_r22'
          _view.t_r22.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_r22'
          _view.t_r22.linkProperty("InputY",  function() { return state_REAL.evolution[8]; } ); // HtmlView Page linking property 'InputY' for element 't_r22'
          _view.t_u22.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_u22'
          _view.t_u22.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_u22'
          _view.t_u22.linkProperty("InputY",  function() { return state_REAL.evolution[2]; } ); // HtmlView Page linking property 'InputY' for element 't_u22'
          _view.t_y22.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_y22'
          _view.t_y22.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_y22'
          _view.t_y22.linkProperty("InputY",  function() { return state_REAL.evolution[5]; } ); // HtmlView Page linking property 'InputY' for element 't_y22'
          _view.evolution_graph_y.setAction("OnDoubleClick", _view._reset); // HtmlView Page setting action 'OnDoubleClick' for element 'evolution_graph_y'
          _view.evolution_graph_y.linkProperty("Display",  function() {
      if (graph_y) {return "inline"} else {return "none"}  // > evolution_graph_y.Display:1
      ;    }); // HtmlView Page linking property 'Display' for element 'evolution_graph_y'
          _view.t_r23.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_r23'
          _view.t_r23.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_r23'
          _view.t_r23.linkProperty("InputY",  function() { return state_REAL.evolution[9]; } ); // HtmlView Page linking property 'InputY' for element 't_r23'
          _view.t_u23.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_u23'
          _view.t_u23.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_u23'
          _view.t_u23.linkProperty("InputY",  function() { return state_REAL.evolution[3]; } ); // HtmlView Page linking property 'InputY' for element 't_u23'
          _view.t_y23.linkProperty("Maximum",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Maximum' for element 't_y23'
          _view.t_y23.linkProperty("InputX",  function() { return state_REAL.evolution[0]; } ); // HtmlView Page linking property 'InputX' for element 't_y23'
          _view.t_y23.linkProperty("InputY",  function() { return state_REAL.evolution[6]; } ); // HtmlView Page linking property 'InputY' for element 't_y23'
          _view.camera_button.linkProperty("Checked",  function() { return graph_0; }, function(_v) { graph_0 = _v; } ); // HtmlView Page linking property 'Checked' for element 'camera_button'
          _view.camera_button.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'camera_button'
          _view.evolution_button_u.linkProperty("Checked",  function() { return graph_u; }, function(_v) { graph_u = _v; } ); // HtmlView Page linking property 'Checked' for element 'evolution_button_u'
          _view.evolution_button_u.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'evolution_button_u'
          _view.evolution_button_p.linkProperty("Checked",  function() { return graph_p; }, function(_v) { graph_p = _v; } ); // HtmlView Page linking property 'Checked' for element 'evolution_button_p'
          _view.evolution_button_p.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'evolution_button_p'
          _view.evolution_button_r.linkProperty("Checked",  function() { return graph_r; }, function(_v) { graph_r = _v; } ); // HtmlView Page linking property 'Checked' for element 'evolution_button_r'
          _view.evolution_button_r.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'evolution_button_r'
          _view.evolution_button_y.linkProperty("Checked",  function() { return graph_y; }, function(_v) { graph_y = _v; } ); // HtmlView Page linking property 'Checked' for element 'evolution_button_y'
          _view.evolution_button_y.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'evolution_button_y'
          _view.window_.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'window_'
          _view.windowNumerico.linkProperty("Value",  function() { return windowElement; }, function(_v) { windowElement = _v; } ); // HtmlView Page linking property 'Value' for element 'windowNumerico'
          _view.windowNumerico.setAction("OnChange", function() { if (windowElement<50)
  windowElement=50;
if (windowElement>1000)
  windowElement=1000; }); // HtmlView Page setting action 'OnChange' for element 'windowNumerico'
          _view.windowNumerico.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'windowNumerico'
          _view.empty2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'empty2'
          _view.empty2.linkProperty("Width",  function() { return w_Tfunction3; }, function(_v) { w_Tfunction3 = _v; } ); // HtmlView Page linking property 'Width' for element 'empty2'
          _view.empty.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'empty'
          _view.empty.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'empty'
          _view.REAL_label_input.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'REAL_label_input'
          _view.REAL_label_input.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'REAL_label_input'
          _view.EJS_label_intup.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'EJS_label_intup'
          _view.EJS_label_intup.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'EJS_label_intup'
          _view.EJS_label_intup.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'EJS_label_intup'
          _view.input_mode.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'input_mode'
          _view.input_mode.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'input_mode'
          _view.input_mode.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'input_mode'
          _view.mode_REAL.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'mode_REAL'
          _view.mode_REAL.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_REAL'
          _view.mode_REAL.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_REAL'
          _view.mode_EJS.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'mode_EJS'
          _view.mode_EJS.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_EJS'
          _view.mode_EJS.linkProperty("Options",  function() { return referenceMove; }, function(_v) { referenceMove = _v; } ); // HtmlView Page linking property 'Options' for element 'mode_EJS'
          _view.mode_EJS.linkProperty("SelectedOptions",  function() { return referenceSelect; }, function(_v) { referenceSelect = _v; } ); // HtmlView Page linking property 'SelectedOptions' for element 'mode_EJS'
          _view.mode_EJS.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_EJS'
          _view.wave_pitch.linkProperty("Display",  function() {
      if (referenceSelect=='Pitch')      return "inline";    else      return "none";  // > wave_pitch.Display:1
    }); // HtmlView Page linking property 'Display' for element 'wave_pitch'
          _view.input_mode3.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'input_mode3'
          _view.input_mode3.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'input_mode3'
          _view.input_mode3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'input_mode3'
          _view.mode_REAL3.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'mode_REAL3'
          _view.mode_REAL3.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_REAL3'
          _view.mode_REAL3.linkProperty("Value",  function() { return referenceMode[state_REAL.reference.Pitch.Tipo]; }, function(_v) { referenceMode[state_REAL.reference.Pitch.Tipo] = _v; } ); // HtmlView Page linking property 'Value' for element 'mode_REAL3'
          _view.mode_REAL3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_REAL3'
          _view.mode_EJS3.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'mode_EJS3'
          _view.mode_EJS3.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_EJS3'
          _view.mode_EJS3.linkProperty("Options",  function() { return referenceMode; }, function(_v) { referenceMode = _v; } ); // HtmlView Page linking property 'Options' for element 'mode_EJS3'
          _view.mode_EJS3.linkProperty("Background",  function() { return color_update_reference('Pitch','Tipo'); }, function(_v) { color_update_reference('Pitch','Tipo') = _v; } ); // HtmlView Page linking property 'Background' for element 'mode_EJS3'
          _view.mode_EJS3.linkProperty("SelectedOptions",  function() { return referenceSelect_p; }, function(_v) { referenceSelect_p = _v; } ); // HtmlView Page linking property 'SelectedOptions' for element 'mode_EJS3'
          _view.mode_EJS3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_EJS3'
          _view.wave_amp2.linkProperty("Visibility",  function() { return select_update_reference('Pitch',0); } ); // HtmlView Page linking property 'Visibility' for element 'wave_amp2'
          _view.amp_title2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'amp_title2'
          _view.amp_title2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'amp_title2'
          _view.amp_title2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'amp_title2'
          _view.amp_REAL2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'amp_REAL2'
          _view.amp_REAL2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'amp_REAL2'
          _view.amp_REAL2.linkProperty("Value",  function() { return state_REAL.reference.Pitch.param[1]; }, function(_v) { state_REAL.reference.Pitch.param[1] = _v; } ); // HtmlView Page linking property 'Value' for element 'amp_REAL2'
          _view.amp_REAL2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'amp_REAL2'
          _view.amp_EJS2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'amp_EJS2'
          _view.amp_EJS2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'amp_EJS2'
          _view.amp_EJS2.linkProperty("Background",  function() { return color_update_reference('Pitch',1); }, function(_v) { color_update_reference('Pitch',1) = _v; } ); // HtmlView Page linking property 'Background' for element 'amp_EJS2'
          _view.amp_EJS2.linkProperty("Value",  function() { return state_EJS.reference.Pitch.param[1]; }, function(_v) { state_EJS.reference.Pitch.param[1] = _v; } ); // HtmlView Page linking property 'Value' for element 'amp_EJS2'
          _view.amp_EJS2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'amp_EJS2'
          _view.wave_period2.linkProperty("Visibility",  function() { return select_update_reference('Pitch',1); } ); // HtmlView Page linking property 'Visibility' for element 'wave_period2'
          _view.period_title2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'period_title2'
          _view.period_title2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'period_title2'
          _view.period_title2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'period_title2'
          _view.period_REAL2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'period_REAL2'
          _view.period_REAL2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'period_REAL2'
          _view.period_REAL2.linkProperty("Value",  function() { return state_REAL.reference.Pitch.param[0]; }, function(_v) { state_REAL.reference.Pitch.param[0] = _v; } ); // HtmlView Page linking property 'Value' for element 'period_REAL2'
          _view.period_REAL2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'period_REAL2'
          _view.period_EJS2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'period_EJS2'
          _view.period_EJS2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'period_EJS2'
          _view.period_EJS2.linkProperty("Background",  function() { return color_update_reference('Pitch',0); }, function(_v) { color_update_reference('Pitch',0) = _v; } ); // HtmlView Page linking property 'Background' for element 'period_EJS2'
          _view.period_EJS2.linkProperty("Value",  function() { return state_EJS.reference.Pitch.param[0]; }, function(_v) { state_EJS.reference.Pitch.param[0] = _v; } ); // HtmlView Page linking property 'Value' for element 'period_EJS2'
          _view.period_EJS2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'period_EJS2'
          _view.wave_offsetY2.linkProperty("Visibility",  function() { return select_update_reference('Pitch',0); } ); // HtmlView Page linking property 'Visibility' for element 'wave_offsetY2'
          _view.offsetY_title2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetY_title2'
          _view.offsetY_title2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetY_title2'
          _view.offsetY_title2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetY_title2'
          _view.offsetY_REAL2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetY_REAL2'
          _view.offsetY_REAL2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetY_REAL2'
          _view.offsetY_REAL2.linkProperty("Value",  function() { return state_REAL.reference.Pitch.param[2]; }, function(_v) { state_REAL.reference.Pitch.param[2] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetY_REAL2'
          _view.offsetY_REAL2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetY_REAL2'
          _view.offsetY_EJS2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetY_EJS2'
          _view.offsetY_EJS2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetY_EJS2'
          _view.offsetY_EJS2.linkProperty("Background",  function() { return color_update_reference('Pitch',2); }, function(_v) { color_update_reference('Pitch',2) = _v; } ); // HtmlView Page linking property 'Background' for element 'offsetY_EJS2'
          _view.offsetY_EJS2.linkProperty("Value",  function() { return state_EJS.reference.Pitch.param[2]; }, function(_v) { state_EJS.reference.Pitch.param[2] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetY_EJS2'
          _view.offsetY_EJS2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetY_EJS2'
          _view.wave_offsetT2.linkProperty("Visibility",  function() { return select_update_reference('Pitch',0); } ); // HtmlView Page linking property 'Visibility' for element 'wave_offsetT2'
          _view.offsetT_title2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetT_title2'
          _view.offsetT_title2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetT_title2'
          _view.offsetT_title2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetT_title2'
          _view.offsetT_REAL2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetT_REAL2'
          _view.offsetT_REAL2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetT_REAL2'
          _view.offsetT_REAL2.linkProperty("Value",  function() { return state_REAL.reference.Pitch.param[3]; }, function(_v) { state_REAL.reference.Pitch.param[3] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetT_REAL2'
          _view.offsetT_REAL2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetT_REAL2'
          _view.offsetT_EJS2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetT_EJS2'
          _view.offsetT_EJS2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetT_EJS2'
          _view.offsetT_EJS2.linkProperty("Background",  function() { return color_update_reference('Pitch',3); }, function(_v) { color_update_reference('Pitch',3) = _v; } ); // HtmlView Page linking property 'Background' for element 'offsetT_EJS2'
          _view.offsetT_EJS2.linkProperty("Value",  function() { return state_EJS.reference.Pitch.param[3]; }, function(_v) { state_EJS.reference.Pitch.param[3] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetT_EJS2'
          _view.offsetT_EJS2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetT_EJS2'
          _view.wave_roll.linkProperty("Display",  function() {
      if (referenceSelect=='Roll')      return "inline";    else      return "none";  // > wave_roll.Display:1
    }); // HtmlView Page linking property 'Display' for element 'wave_roll'
          _view.input_mode32.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'input_mode32'
          _view.input_mode32.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'input_mode32'
          _view.input_mode32.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'input_mode32'
          _view.mode_REAL32.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'mode_REAL32'
          _view.mode_REAL32.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_REAL32'
          _view.mode_REAL32.linkProperty("Value",  function() { return referenceMode[state_REAL.reference.Roll.Tipo]; }, function(_v) { referenceMode[state_REAL.reference.Roll.Tipo] = _v; } ); // HtmlView Page linking property 'Value' for element 'mode_REAL32'
          _view.mode_REAL32.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_REAL32'
          _view.mode_EJS32.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'mode_EJS32'
          _view.mode_EJS32.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_EJS32'
          _view.mode_EJS32.linkProperty("Options",  function() { return referenceMode; }, function(_v) { referenceMode = _v; } ); // HtmlView Page linking property 'Options' for element 'mode_EJS32'
          _view.mode_EJS32.linkProperty("Background",  function() { return color_update_reference('Roll','Tipo'); }, function(_v) { color_update_reference('Roll','Tipo') = _v; } ); // HtmlView Page linking property 'Background' for element 'mode_EJS32'
          _view.mode_EJS32.linkProperty("SelectedOptions",  function() { return referenceSelect_r; }, function(_v) { referenceSelect_r = _v; } ); // HtmlView Page linking property 'SelectedOptions' for element 'mode_EJS32'
          _view.mode_EJS32.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_EJS32'
          _view.wave_amp22.linkProperty("Visibility",  function() { return select_update_reference('Roll',0); } ); // HtmlView Page linking property 'Visibility' for element 'wave_amp22'
          _view.amp_title22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'amp_title22'
          _view.amp_title22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'amp_title22'
          _view.amp_title22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'amp_title22'
          _view.amp_REAL22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'amp_REAL22'
          _view.amp_REAL22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'amp_REAL22'
          _view.amp_REAL22.linkProperty("Value",  function() { return state_REAL.reference.Roll.param[1]; }, function(_v) { state_REAL.reference.Roll.param[1] = _v; } ); // HtmlView Page linking property 'Value' for element 'amp_REAL22'
          _view.amp_REAL22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'amp_REAL22'
          _view.amp_EJS22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'amp_EJS22'
          _view.amp_EJS22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'amp_EJS22'
          _view.amp_EJS22.linkProperty("Background",  function() { return color_update_reference('Roll',1); }, function(_v) { color_update_reference('Roll',1) = _v; } ); // HtmlView Page linking property 'Background' for element 'amp_EJS22'
          _view.amp_EJS22.linkProperty("Value",  function() { return state_EJS.reference.Roll.param[1]; }, function(_v) { state_EJS.reference.Roll.param[1] = _v; } ); // HtmlView Page linking property 'Value' for element 'amp_EJS22'
          _view.amp_EJS22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'amp_EJS22'
          _view.wave_period22.linkProperty("Visibility",  function() { return select_update_reference('Roll',1); } ); // HtmlView Page linking property 'Visibility' for element 'wave_period22'
          _view.period_title22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'period_title22'
          _view.period_title22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'period_title22'
          _view.period_title22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'period_title22'
          _view.period_REAL22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'period_REAL22'
          _view.period_REAL22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'period_REAL22'
          _view.period_REAL22.linkProperty("Value",  function() { return state_REAL.reference.Roll.param[0]; }, function(_v) { state_REAL.reference.Roll.param[0] = _v; } ); // HtmlView Page linking property 'Value' for element 'period_REAL22'
          _view.period_REAL22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'period_REAL22'
          _view.period_EJS22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'period_EJS22'
          _view.period_EJS22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'period_EJS22'
          _view.period_EJS22.linkProperty("Background",  function() { return color_update_reference('Roll',0); }, function(_v) { color_update_reference('Roll',0) = _v; } ); // HtmlView Page linking property 'Background' for element 'period_EJS22'
          _view.period_EJS22.linkProperty("Value",  function() { return state_EJS.reference.Roll.param[0]; }, function(_v) { state_EJS.reference.Roll.param[0] = _v; } ); // HtmlView Page linking property 'Value' for element 'period_EJS22'
          _view.period_EJS22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'period_EJS22'
          _view.wave_offsetY22.linkProperty("Visibility",  function() { return select_update_reference('Roll',0); } ); // HtmlView Page linking property 'Visibility' for element 'wave_offsetY22'
          _view.offsetY_title22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetY_title22'
          _view.offsetY_title22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetY_title22'
          _view.offsetY_title22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetY_title22'
          _view.offsetY_REAL22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetY_REAL22'
          _view.offsetY_REAL22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetY_REAL22'
          _view.offsetY_REAL22.linkProperty("Value",  function() { return state_REAL.reference.Roll.param[2]; }, function(_v) { state_REAL.reference.Roll.param[2] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetY_REAL22'
          _view.offsetY_REAL22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetY_REAL22'
          _view.offsetY_EJS22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetY_EJS22'
          _view.offsetY_EJS22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetY_EJS22'
          _view.offsetY_EJS22.linkProperty("Background",  function() { return color_update_reference('Roll',2); }, function(_v) { color_update_reference('Roll',2) = _v; } ); // HtmlView Page linking property 'Background' for element 'offsetY_EJS22'
          _view.offsetY_EJS22.linkProperty("Value",  function() { return state_EJS.reference.Roll.param[2]; }, function(_v) { state_EJS.reference.Roll.param[2] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetY_EJS22'
          _view.offsetY_EJS22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetY_EJS22'
          _view.wave_offsetT22.linkProperty("Visibility",  function() { return select_update_reference('Roll',0); } ); // HtmlView Page linking property 'Visibility' for element 'wave_offsetT22'
          _view.offsetT_title22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetT_title22'
          _view.offsetT_title22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetT_title22'
          _view.offsetT_title22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetT_title22'
          _view.offsetT_REAL22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetT_REAL22'
          _view.offsetT_REAL22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetT_REAL22'
          _view.offsetT_REAL22.linkProperty("Value",  function() { return state_REAL.reference.Roll.param[3]; }, function(_v) { state_REAL.reference.Roll.param[3] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetT_REAL22'
          _view.offsetT_REAL22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetT_REAL22'
          _view.offsetT_EJS22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetT_EJS22'
          _view.offsetT_EJS22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetT_EJS22'
          _view.offsetT_EJS22.linkProperty("Background",  function() { return color_update_reference('Roll',3); }, function(_v) { color_update_reference('Roll',3) = _v; } ); // HtmlView Page linking property 'Background' for element 'offsetT_EJS22'
          _view.offsetT_EJS22.linkProperty("Value",  function() { return state_EJS.reference.Roll.param[3]; }, function(_v) { state_EJS.reference.Roll.param[3] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetT_EJS22'
          _view.offsetT_EJS22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetT_EJS22'
          _view.wave_yaw.linkProperty("Display",  function() {
      if (referenceSelect=='Yaw')      return "inline";    else      return "none";  // > wave_yaw.Display:1
    }); // HtmlView Page linking property 'Display' for element 'wave_yaw'
          _view.input_mode322.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'input_mode322'
          _view.input_mode322.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'input_mode322'
          _view.input_mode322.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'input_mode322'
          _view.mode_REAL322.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'mode_REAL322'
          _view.mode_REAL322.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_REAL322'
          _view.mode_REAL322.linkProperty("Value",  function() { return referenceMode[state_REAL.reference.Yaw.Tipo]; }, function(_v) { referenceMode[state_REAL.reference.Yaw.Tipo] = _v; } ); // HtmlView Page linking property 'Value' for element 'mode_REAL322'
          _view.mode_REAL322.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_REAL322'
          _view.mode_EJS322.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'mode_EJS322'
          _view.mode_EJS322.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_EJS322'
          _view.mode_EJS322.linkProperty("Options",  function() { return referenceMode; }, function(_v) { referenceMode = _v; } ); // HtmlView Page linking property 'Options' for element 'mode_EJS322'
          _view.mode_EJS322.linkProperty("Background",  function() { return color_update_reference('Yaw','Tipo'); }, function(_v) { color_update_reference('Yaw','Tipo') = _v; } ); // HtmlView Page linking property 'Background' for element 'mode_EJS322'
          _view.mode_EJS322.linkProperty("SelectedOptions",  function() { return referenceSelect_y; }, function(_v) { referenceSelect_y = _v; } ); // HtmlView Page linking property 'SelectedOptions' for element 'mode_EJS322'
          _view.mode_EJS322.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_EJS322'
          _view.wave_amp222.linkProperty("Visibility",  function() { return select_update_reference('Yaw',0); } ); // HtmlView Page linking property 'Visibility' for element 'wave_amp222'
          _view.amp_title222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'amp_title222'
          _view.amp_title222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'amp_title222'
          _view.amp_title222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'amp_title222'
          _view.amp_REAL222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'amp_REAL222'
          _view.amp_REAL222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'amp_REAL222'
          _view.amp_REAL222.linkProperty("Value",  function() { return state_REAL.reference.Yaw.param[1]; }, function(_v) { state_REAL.reference.Yaw.param[1] = _v; } ); // HtmlView Page linking property 'Value' for element 'amp_REAL222'
          _view.amp_REAL222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'amp_REAL222'
          _view.amp_EJS222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'amp_EJS222'
          _view.amp_EJS222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'amp_EJS222'
          _view.amp_EJS222.linkProperty("Background",  function() { return color_update_reference('Yaw',1); }, function(_v) { color_update_reference('Yaw',1) = _v; } ); // HtmlView Page linking property 'Background' for element 'amp_EJS222'
          _view.amp_EJS222.linkProperty("Value",  function() { return state_EJS.reference.Yaw.param[1]; }, function(_v) { state_EJS.reference.Yaw.param[1] = _v; } ); // HtmlView Page linking property 'Value' for element 'amp_EJS222'
          _view.amp_EJS222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'amp_EJS222'
          _view.wave_period222.linkProperty("Visibility",  function() { return select_update_reference('Yaw',1); } ); // HtmlView Page linking property 'Visibility' for element 'wave_period222'
          _view.period_title222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'period_title222'
          _view.period_title222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'period_title222'
          _view.period_title222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'period_title222'
          _view.period_REAL222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'period_REAL222'
          _view.period_REAL222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'period_REAL222'
          _view.period_REAL222.linkProperty("Value",  function() { return state_REAL.reference.Yaw.param[0]; }, function(_v) { state_REAL.reference.Yaw.param[0] = _v; } ); // HtmlView Page linking property 'Value' for element 'period_REAL222'
          _view.period_REAL222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'period_REAL222'
          _view.period_EJS222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'period_EJS222'
          _view.period_EJS222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'period_EJS222'
          _view.period_EJS222.linkProperty("Background",  function() { return color_update_reference('Yaw',0); }, function(_v) { color_update_reference('Yaw',0) = _v; } ); // HtmlView Page linking property 'Background' for element 'period_EJS222'
          _view.period_EJS222.linkProperty("Value",  function() { return state_EJS.reference.Yaw.param[0]; }, function(_v) { state_EJS.reference.Yaw.param[0] = _v; } ); // HtmlView Page linking property 'Value' for element 'period_EJS222'
          _view.period_EJS222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'period_EJS222'
          _view.wave_offsetY222.linkProperty("Visibility",  function() { return select_update_reference('Yaw',0); } ); // HtmlView Page linking property 'Visibility' for element 'wave_offsetY222'
          _view.offsetY_title222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetY_title222'
          _view.offsetY_title222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetY_title222'
          _view.offsetY_title222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetY_title222'
          _view.offsetY_REAL222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetY_REAL222'
          _view.offsetY_REAL222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetY_REAL222'
          _view.offsetY_REAL222.linkProperty("Value",  function() { return state_REAL.reference.Yaw.param[2]; }, function(_v) { state_REAL.reference.Yaw.param[2] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetY_REAL222'
          _view.offsetY_REAL222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetY_REAL222'
          _view.offsetY_EJS222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetY_EJS222'
          _view.offsetY_EJS222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetY_EJS222'
          _view.offsetY_EJS222.linkProperty("Background",  function() { return color_update_reference('Yaw',2); }, function(_v) { color_update_reference('Yaw',2) = _v; } ); // HtmlView Page linking property 'Background' for element 'offsetY_EJS222'
          _view.offsetY_EJS222.linkProperty("Value",  function() { return state_EJS.reference.Yaw.param[2]; }, function(_v) { state_EJS.reference.Yaw.param[2] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetY_EJS222'
          _view.offsetY_EJS222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetY_EJS222'
          _view.wave_offsetT222.linkProperty("Visibility",  function() { return select_update_reference('Yaw',0); } ); // HtmlView Page linking property 'Visibility' for element 'wave_offsetT222'
          _view.offsetT_title222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetT_title222'
          _view.offsetT_title222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetT_title222'
          _view.offsetT_title222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetT_title222'
          _view.offsetT_REAL222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetT_REAL222'
          _view.offsetT_REAL222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetT_REAL222'
          _view.offsetT_REAL222.linkProperty("Value",  function() { return state_REAL.reference.Yaw.param[3]; }, function(_v) { state_REAL.reference.Yaw.param[3] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetT_REAL222'
          _view.offsetT_REAL222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetT_REAL222'
          _view.offsetT_EJS222.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'offsetT_EJS222'
          _view.offsetT_EJS222.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'offsetT_EJS222'
          _view.offsetT_EJS222.linkProperty("Background",  function() { return color_update_reference('Yaw',3); }, function(_v) { color_update_reference('Yaw',3) = _v; } ); // HtmlView Page linking property 'Background' for element 'offsetT_EJS222'
          _view.offsetT_EJS222.linkProperty("Value",  function() { return state_EJS.reference.Yaw.param[3]; }, function(_v) { state_EJS.reference.Yaw.param[3] = _v; } ); // HtmlView Page linking property 'Value' for element 'offsetT_EJS222'
          _view.offsetT_EJS222.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'offsetT_EJS222'
          _view.empty22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'empty22'
          _view.empty22.linkProperty("Width",  function() { return w_Tfunction3; }, function(_v) { w_Tfunction3 = _v; } ); // HtmlView Page linking property 'Width' for element 'empty22'
          _view.empty3.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'empty3'
          _view.empty3.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'empty3'
          _view.REAL_label_controller.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'REAL_label_controller'
          _view.REAL_label_controller.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'REAL_label_controller'
          _view.REAL_label_controller.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'REAL_label_controller'
          _view.EJS_label_controller.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'EJS_label_controller'
          _view.EJS_label_controller.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'EJS_label_controller'
          _view.EJS_label_controller.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'EJS_label_controller'
          _view.input_mode2.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'input_mode2'
          _view.input_mode2.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'input_mode2'
          _view.input_mode2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'input_mode2'
          _view.mode_REAL2.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_REAL2'
          _view.mode_REAL2.linkProperty("Value",  function() { return controllerMode[state_REAL.controller.Tipo]; }, function(_v) { controllerMode[state_REAL.controller.Tipo] = _v; } ); // HtmlView Page linking property 'Value' for element 'mode_REAL2'
          _view.mode_REAL2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_REAL2'
          _view.mode_EJS2.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_EJS2'
          _view.mode_EJS2.linkProperty("Options",  function() { return controllerMode; }, function(_v) { controllerMode = _v; } ); // HtmlView Page linking property 'Options' for element 'mode_EJS2'
          _view.mode_EJS2.linkProperty("Background",  function() { return color_update_controller ('Tipo'); }, function(_v) { color_update_controller ('Tipo') = _v; } ); // HtmlView Page linking property 'Background' for element 'mode_EJS2'
          _view.mode_EJS2.linkProperty("SelectedOptions",  function() { return controllerSelect; }, function(_v) { controllerSelect = _v; } ); // HtmlView Page linking property 'SelectedOptions' for element 'mode_EJS2'
          _view.mode_EJS2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_EJS2'
          _view.controller_PIDs.linkProperty("Display",  function() {
      if (controllerSelect=='PID')      return "inline";    else      return "none";  // > controller_PIDs.Display:1
    }); // HtmlView Page linking property 'Display' for element 'controller_PIDs'
          _view.input_mode22.linkProperty("Height",  function() { return h_Tfunction; }, function(_v) { h_Tfunction = _v; } ); // HtmlView Page linking property 'Height' for element 'input_mode22'
          _view.input_mode22.linkProperty("Width",  function() { return w_Tfunction; }, function(_v) { w_Tfunction = _v; } ); // HtmlView Page linking property 'Width' for element 'input_mode22'
          _view.input_mode22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'input_mode22'
          _view.mode_REAL22.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_REAL22'
          _view.mode_REAL22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_REAL22'
          _view.mode_EJS22.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'mode_EJS22'
          _view.mode_EJS22.linkProperty("Options",  function() { return controllerModePID; }, function(_v) { controllerModePID = _v; } ); // HtmlView Page linking property 'Options' for element 'mode_EJS22'
          _view.mode_EJS22.linkProperty("Background",  function() { return color_update_controller ('Tipo'); }, function(_v) { color_update_controller ('Tipo') = _v; } ); // HtmlView Page linking property 'Background' for element 'mode_EJS22'
          _view.mode_EJS22.linkProperty("SelectedOptions",  function() { return controllerSelectPID; }, function(_v) { controllerSelectPID = _v; } ); // HtmlView Page linking property 'SelectedOptions' for element 'mode_EJS22'
          _view.mode_EJS22.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'mode_EJS22'
          _view.controller_PIDpr.linkProperty("Display",  function() {
      if (controllerSelectPID=='Pitch,Roll')      return "inline";    else      return "none";  // > controller_PIDpr.Display:1
    }); // HtmlView Page linking property 'Display' for element 'controller_PIDpr'
          _view.kp_title.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'kp_title'
          _view.kp_title.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'kp_title'
          _view.kp_title.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kp_title'
          _view.kp_REAL.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'kp_REAL'
          _view.kp_REAL.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kp_REAL'
          _view.kp_REAL.linkProperty("Value",  function() { return state_REAL.controller.PIDPR[0]; }, function(_v) { state_REAL.controller.PIDPR[0] = _v; } ); // HtmlView Page linking property 'Value' for element 'kp_REAL'
          _view.kp_REAL.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kp_REAL'
          _view.kp_EJS.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'kp_EJS'
          _view.kp_EJS.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kp_EJS'
          _view.kp_EJS.linkProperty("Background",  function() { return color_update_controller ('PIDPR',0); }, function(_v) { color_update_controller ('PIDPR',0) = _v; } ); // HtmlView Page linking property 'Background' for element 'kp_EJS'
          _view.kp_EJS.linkProperty("Value",  function() { return state_EJS.controller.PIDPR[0]; }, function(_v) { state_EJS.controller.PIDPR[0] = _v; } ); // HtmlView Page linking property 'Value' for element 'kp_EJS'
          _view.kp_EJS.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kp_EJS'
          _view.ki_title.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'ki_title'
          _view.ki_title.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'ki_title'
          _view.ki_title.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'ki_title'
          _view.ki_REAL.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'ki_REAL'
          _view.ki_REAL.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'ki_REAL'
          _view.ki_REAL.linkProperty("Value",  function() { return state_REAL.controller.PIDPR[1]; }, function(_v) { state_REAL.controller.PIDPR[1] = _v; } ); // HtmlView Page linking property 'Value' for element 'ki_REAL'
          _view.ki_REAL.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'ki_REAL'
          _view.ki_EJS.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'ki_EJS'
          _view.ki_EJS.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'ki_EJS'
          _view.ki_EJS.linkProperty("Background",  function() { return color_update_controller ('PIDPR',1); }, function(_v) { color_update_controller ('PIDPR',1) = _v; } ); // HtmlView Page linking property 'Background' for element 'ki_EJS'
          _view.ki_EJS.linkProperty("Value",  function() { return state_EJS.controller.PIDPR[1]; }, function(_v) { state_EJS.controller.PIDPR[1] = _v; } ); // HtmlView Page linking property 'Value' for element 'ki_EJS'
          _view.ki_EJS.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'ki_EJS'
          _view.kd_title.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'kd_title'
          _view.kd_title.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'kd_title'
          _view.kd_title.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kd_title'
          _view.kd_REAL.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'kd_REAL'
          _view.kd_REAL.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kd_REAL'
          _view.kd_REAL.linkProperty("Value",  function() { return state_REAL.controller.PIDPR[2]; }, function(_v) { state_REAL.controller.PIDPR[2] = _v; } ); // HtmlView Page linking property 'Value' for element 'kd_REAL'
          _view.kd_REAL.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kd_REAL'
          _view.kd_EJS.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'kd_EJS'
          _view.kd_EJS.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kd_EJS'
          _view.kd_EJS.linkProperty("Background",  function() { return color_update_controller ('PIDPR',2); }, function(_v) { color_update_controller ('PIDPR',2) = _v; } ); // HtmlView Page linking property 'Background' for element 'kd_EJS'
          _view.kd_EJS.linkProperty("Value",  function() { return state_EJS.controller.PIDPR[2]; }, function(_v) { state_EJS.controller.PIDPR[2] = _v; } ); // HtmlView Page linking property 'Value' for element 'kd_EJS'
          _view.kd_EJS.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kd_EJS'
          _view.n_title.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'n_title'
          _view.n_title.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'n_title'
          _view.n_title.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'n_title'
          _view.n_REAL.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'n_REAL'
          _view.n_REAL.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'n_REAL'
          _view.n_REAL.linkProperty("Value",  function() { return state_REAL.controller.PIDPR[3]; }, function(_v) { state_REAL.controller.PIDPR[3] = _v; } ); // HtmlView Page linking property 'Value' for element 'n_REAL'
          _view.n_REAL.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'n_REAL'
          _view.n_EJS.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'n_EJS'
          _view.n_EJS.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'n_EJS'
          _view.n_EJS.linkProperty("Background",  function() { return color_update_controller ('PIDPR',4); }, function(_v) { color_update_controller ('PIDPR',4) = _v; } ); // HtmlView Page linking property 'Background' for element 'n_EJS'
          _view.n_EJS.linkProperty("Value",  function() { return state_EJS.controller.PIDPR[3]; }, function(_v) { state_EJS.controller.PIDPR[3] = _v; } ); // HtmlView Page linking property 'Value' for element 'n_EJS'
          _view.n_EJS.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'n_EJS'
          _view.controller_PIDy.linkProperty("Display",  function() {
      if (controllerSelectPID=='Yaw')      return "inline";    else      return "none";  // > controller_PIDy.Display:1
    }); // HtmlView Page linking property 'Display' for element 'controller_PIDy'
          _view.kp_title3.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'kp_title3'
          _view.kp_title3.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'kp_title3'
          _view.kp_title3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kp_title3'
          _view.kp_REAL2.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'kp_REAL2'
          _view.kp_REAL2.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kp_REAL2'
          _view.kp_REAL2.linkProperty("Value",  function() { return state_REAL.controller.PIDY[0]; }, function(_v) { state_REAL.controller.PIDY[0] = _v; } ); // HtmlView Page linking property 'Value' for element 'kp_REAL2'
          _view.kp_REAL2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kp_REAL2'
          _view.kp_EJS2.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'kp_EJS2'
          _view.kp_EJS2.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kp_EJS2'
          _view.kp_EJS2.linkProperty("Background",  function() { return color_update_controller ('PIDY',0); }, function(_v) { color_update_controller ('PIDY',0) = _v; } ); // HtmlView Page linking property 'Background' for element 'kp_EJS2'
          _view.kp_EJS2.linkProperty("Value",  function() { return state_EJS.controller.PIDY[0]; }, function(_v) { state_EJS.controller.PIDY[0] = _v; } ); // HtmlView Page linking property 'Value' for element 'kp_EJS2'
          _view.kp_EJS2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kp_EJS2'
          _view.ki_title2.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'ki_title2'
          _view.ki_title2.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'ki_title2'
          _view.ki_title2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'ki_title2'
          _view.ki_REAL2.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'ki_REAL2'
          _view.ki_REAL2.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'ki_REAL2'
          _view.ki_REAL2.linkProperty("Value",  function() { return state_REAL.controller.PIDY[1]; }, function(_v) { state_REAL.controller.PIDY[1] = _v; } ); // HtmlView Page linking property 'Value' for element 'ki_REAL2'
          _view.ki_REAL2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'ki_REAL2'
          _view.ki_EJS2.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'ki_EJS2'
          _view.ki_EJS2.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'ki_EJS2'
          _view.ki_EJS2.linkProperty("Background",  function() { return color_update_controller ('PIDY',1); }, function(_v) { color_update_controller ('PIDY',1) = _v; } ); // HtmlView Page linking property 'Background' for element 'ki_EJS2'
          _view.ki_EJS2.linkProperty("Value",  function() { return state_EJS.controller.PIDY[1]; }, function(_v) { state_EJS.controller.PIDY[1] = _v; } ); // HtmlView Page linking property 'Value' for element 'ki_EJS2'
          _view.ki_EJS2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'ki_EJS2'
          _view.kd_title2.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'kd_title2'
          _view.kd_title2.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'kd_title2'
          _view.kd_title2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kd_title2'
          _view.kd_REAL2.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'kd_REAL2'
          _view.kd_REAL2.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kd_REAL2'
          _view.kd_REAL2.linkProperty("Value",  function() { return state_REAL.controller.PIDY[2]; }, function(_v) { state_REAL.controller.PIDY[2] = _v; } ); // HtmlView Page linking property 'Value' for element 'kd_REAL2'
          _view.kd_REAL2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kd_REAL2'
          _view.kd_EJS2.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'kd_EJS2'
          _view.kd_EJS2.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kd_EJS2'
          _view.kd_EJS2.linkProperty("Background",  function() { return color_update_controller ('PIDY',2); }, function(_v) { color_update_controller ('PIDY',2) = _v; } ); // HtmlView Page linking property 'Background' for element 'kd_EJS2'
          _view.kd_EJS2.linkProperty("Value",  function() { return state_EJS.controller.PIDY[2]; }, function(_v) { state_EJS.controller.PIDY[2] = _v; } ); // HtmlView Page linking property 'Value' for element 'kd_EJS2'
          _view.kd_EJS2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kd_EJS2'
          _view.n_title2.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'n_title2'
          _view.n_title2.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'n_title2'
          _view.n_title2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'n_title2'
          _view.n_REAL2.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'n_REAL2'
          _view.n_REAL2.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'n_REAL2'
          _view.n_REAL2.linkProperty("Value",  function() { return state_REAL.controller.PIDY[3]; }, function(_v) { state_REAL.controller.PIDY[3] = _v; } ); // HtmlView Page linking property 'Value' for element 'n_REAL2'
          _view.n_REAL2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'n_REAL2'
          _view.n_EJS2.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'n_EJS2'
          _view.n_EJS2.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'n_EJS2'
          _view.n_EJS2.linkProperty("Background",  function() { return color_update_controller ('PIDY',4); }, function(_v) { color_update_controller ('PIDY',4) = _v; } ); // HtmlView Page linking property 'Background' for element 'n_EJS2'
          _view.n_EJS2.linkProperty("Value",  function() { return state_EJS.controller.PIDY[3]; }, function(_v) { state_EJS.controller.PIDY[3] = _v; } ); // HtmlView Page linking property 'Value' for element 'n_EJS2'
          _view.n_EJS2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'n_EJS2'
          _view.controller_FL.linkProperty("Display",  function() {
      if (controllerSelect=='FL')      return "inline";    else      return "none";  // > controller_FL.Display:1
    }); // HtmlView Page linking property 'Display' for element 'controller_FL'
          _view.kp_title2.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'kp_title2'
          _view.kp_title2.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'kp_title2'
          _view.kp_title2.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kp_title2'
          _view.F_REAL.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'F_REAL'
          _view.F_REAL.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'F_REAL'
          _view.F_REAL.linkProperty("Value",  function() { return state_REAL.controller.FL.K; }, function(_v) { state_REAL.controller.FL.K = _v; } ); // HtmlView Page linking property 'Value' for element 'F_REAL'
          _view.F_REAL.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'F_REAL'
          _view.F_EJS.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'F_EJS'
          _view.F_EJS.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'F_EJS'
          _view.F_EJS.linkProperty("Background",  function() { return color_update_controller ('FL','K'); }, function(_v) { color_update_controller ('FL','K') = _v; } ); // HtmlView Page linking property 'Background' for element 'F_EJS'
          _view.F_EJS.linkProperty("Value",  function() { return state_EJS.controller.FL.K; }, function(_v) { state_EJS.controller.FL.K = _v; } ); // HtmlView Page linking property 'Value' for element 'F_EJS'
          _view.F_EJS.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'F_EJS'
          _view.controller_SL.linkProperty("Display",  function() {
      if (controllerSelect=='SL')      return "inline";    else      return "none";  // > controller_SL.Display:1
    }); // HtmlView Page linking property 'Display' for element 'controller_SL'
          _view.kp_title4.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'kp_title4'
          _view.kp_title4.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'kp_title4'
          _view.kp_title4.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kp_title4'
          _view.kp_REAL3.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'kp_REAL3'
          _view.kp_REAL3.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kp_REAL3'
          _view.kp_REAL3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kp_REAL3'
          _view.kp_EJS3.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'kp_EJS3'
          _view.kp_EJS3.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kp_EJS3'
          _view.kp_EJS3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kp_EJS3'
          _view.ki_title3.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'ki_title3'
          _view.ki_title3.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'ki_title3'
          _view.ki_title3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'ki_title3'
          _view.ki_REAL3.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'ki_REAL3'
          _view.ki_REAL3.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'ki_REAL3'
          _view.ki_REAL3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'ki_REAL3'
          _view.ki_EJS3.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'ki_EJS3'
          _view.ki_EJS3.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'ki_EJS3'
          _view.ki_EJS3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'ki_EJS3'
          _view.kd_title3.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'kd_title3'
          _view.kd_title3.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'kd_title3'
          _view.kd_title3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kd_title3'
          _view.kd_REAL3.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'kd_REAL3'
          _view.kd_REAL3.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kd_REAL3'
          _view.kd_REAL3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kd_REAL3'
          _view.kd_EJS3.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'kd_EJS3'
          _view.kd_EJS3.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'kd_EJS3'
          _view.kd_EJS3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'kd_EJS3'
          _view.n_title3.linkProperty("Height",  function() { return h_TController; }, function(_v) { h_TController = _v; } ); // HtmlView Page linking property 'Height' for element 'n_title3'
          _view.n_title3.linkProperty("Width",  function() { return w_TController; }, function(_v) { w_TController = _v; } ); // HtmlView Page linking property 'Width' for element 'n_title3'
          _view.n_title3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'n_title3'
          _view.n_REAL3.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'n_REAL3'
          _view.n_REAL3.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'n_REAL3'
          _view.n_REAL3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'n_REAL3'
          _view.n_EJS3.linkProperty("Height",  function() { return h_Ncontroller; }, function(_v) { h_Ncontroller = _v; } ); // HtmlView Page linking property 'Height' for element 'n_EJS3'
          _view.n_EJS3.linkProperty("Width",  function() { return w_Ncontroller; }, function(_v) { w_Ncontroller = _v; } ); // HtmlView Page linking property 'Width' for element 'n_EJS3'
          _view.n_EJS3.linkProperty("Font",  function() { return font_style; }, function(_v) { font_style = _v; } ); // HtmlView Page linking property 'Font' for element 'n_EJS3'
          _view.play_state.linkProperty("Height",  function() { return h_buttons; }, function(_v) { h_buttons = _v; } ); // HtmlView Page linking property 'Height' for element 'play_state'
          _view.play_state.linkProperty("Width",  function() { return w_buttons; }, function(_v) { w_buttons = _v; } ); // HtmlView Page linking property 'Width' for element 'play_state'
          _view.play_state.setAction("OffClick", function() { send_connect(2); }); // HtmlView Page setting action 'OffClick' for element 'play_state'
          _view.play_state.linkProperty("Disabled",  function() { return !button_state[1]; } ); // HtmlView Page linking property 'Disabled' for element 'play_state'
          _view.play_state.setAction("OnClick", function() { send_connect(2); }); // HtmlView Page setting action 'OnClick' for element 'play_state'
          _view.pause_button.linkProperty("Height",  function() { return h_buttons; }, function(_v) { h_buttons = _v; } ); // HtmlView Page linking property 'Height' for element 'pause_button'
          _view.pause_button.linkProperty("Width",  function() { return w_buttons; }, function(_v) { w_buttons = _v; } ); // HtmlView Page linking property 'Width' for element 'pause_button'
          _view.pause_button.setAction("OffClick", function() { send_connect(3); }); // HtmlView Page setting action 'OffClick' for element 'pause_button'
          _view.pause_button.linkProperty("Disabled",  function() { return !button_state[2]; } ); // HtmlView Page linking property 'Disabled' for element 'pause_button'
          _view.pause_button.setAction("OnClick", function() { send_connect(3); }); // HtmlView Page setting action 'OnClick' for element 'pause_button'
          _view.reset_button.linkProperty("Height",  function() { return h_buttons; }, function(_v) { h_buttons = _v; } ); // HtmlView Page linking property 'Height' for element 'reset_button'
          _view.reset_button.linkProperty("Width",  function() { return w_buttons; }, function(_v) { w_buttons = _v; } ); // HtmlView Page linking property 'Width' for element 'reset_button'
          _view.reset_button.setAction("OffClick", function() { send_connect(4);
_view._reset(); }); // HtmlView Page setting action 'OffClick' for element 'reset_button'
          _view.reset_button.linkProperty("Disabled",  function() { return !button_state[3]; } ); // HtmlView Page linking property 'Disabled' for element 'reset_button'
          _view.reset_button.setAction("OnClick", function() { send_connect(4);
setTimeout(function() {
  _view._reset();
  }, 1000); }); // HtmlView Page setting action 'OnClick' for element 'reset_button'
          _view.update_button.linkProperty("Height",  function() { return h_buttons; }, function(_v) { h_buttons = _v; } ); // HtmlView Page linking property 'Height' for element 'update_button'
          _view.update_button.linkProperty("Width",  function() { return w_buttons; }, function(_v) { w_buttons = _v; } ); // HtmlView Page linking property 'Width' for element 'update_button'
          _view.update_button.setAction("OffClick", update); // HtmlView Page setting action 'OffClick' for element 'update_button'
          _view.update_button.setAction("OnClick", update); // HtmlView Page setting action 'OnClick' for element 'update_button'
          _view.connect_button.linkProperty("Height",  function() { return h_buttons; }, function(_v) { h_buttons = _v; } ); // HtmlView Page linking property 'Height' for element 'connect_button'
          _view.connect_button.linkProperty("Width",  function() { return w_buttons; }, function(_v) { w_buttons = _v; } ); // HtmlView Page linking property 'Width' for element 'connect_button'
          _view.connect_button.setAction("OffClick", function() { send_connect(0); }); // HtmlView Page setting action 'OffClick' for element 'connect_button'
          _view.connect_button.linkProperty("State",  function() { return !button_state[0]; } ); // HtmlView Page linking property 'State' for element 'connect_button'
          _view.connect_button.setAction("OnClick", function() { send_connect(1);
_view._reset(); }); // HtmlView Page setting action 'OnClick' for element 'connect_button'
          break;
      } // end of switch
    }; // end of new reset

    _model.setView(_view);
    _model.reset();
    _view._enableEPub();
  } // end of _selectView

  _model.setAutoplay(true);
  _model.setFPS(20);
  _model.setStepsPerDisplay(1);
  _selectView(_model._autoSelectView(_getViews())); // this includes _model.reset()
  return _model;
}

function quad_practice_20_View (_topFrame,_viewNumber,_libraryPath,_codebasePath) {
  var _view;
  switch(_viewNumber) {
    case -10 : break; // make Lint happy
    default :
    case 0: _view = quad_practice_20_View_0 (_topFrame); break;
  } // end of switch

  if (_codebasePath) _view._setResourcePath(_codebasePath);
  if (_libraryPath) _view._setLibraryPath(_libraryPath);
  return _view;
} // end of main function

function quad_practice_20_View_0 (_topFrame) {
  var _view = EJSS_CORE.createView(_topFrame);

  _view._reset = function() {
    _view._clearAll();
    _view._addElement(EJSS_INTERFACE.panel,"visualization_panel", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'visualization_panel'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'visualization_panel'
      .setProperty("Display","inline") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'visualization_panel'
      ;

    _view._addElement(EJSS_INTERFACE.html,"htmlArea", _view.visualization_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'htmlArea'
      .setProperty("Height",280) // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'htmlArea'
      .setProperty("Width",380) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'htmlArea'
      .setProperty("Html","<iframe src=\"http://147.96.67.54/video.cgi\" width=\"340\" height=\"260\" frameborder=0>") 
// EJsS HtmlView.HtmlView Page: setting property 'Html' for element 'htmlArea'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"evolution_graph_u", _view.visualization_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'evolution_graph_u'
      .setProperty("Height",280) // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'evolution_graph_u'
      .setProperty("Width",380) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'evolution_graph_u'
      .setProperty("ShowAreaRectangle",false) // EJsS HtmlView.HtmlView Page: setting property 'ShowAreaRectangle' for element 'evolution_graph_u'
      .setProperty("TitleY","Amplitude (V)") // EJsS HtmlView.HtmlView Page: setting property 'TitleY' for element 'evolution_graph_u'
      .setProperty("TitleX","Time (s)") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'evolution_graph_u'
      .setProperty("AutoScaleY",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'evolution_graph_u'
      .setProperty("AutoScaleX",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'evolution_graph_u'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'evolution_graph_u'
      .setProperty("Title","Drives: Left (blue), Rigth (Green), Back (red), Front (black)") // EJsS HtmlView.HtmlView Page: setting property 'Title' for element 'evolution_graph_u'
      .setProperty("StopGestures",false) // EJsS HtmlView.HtmlView Page: setting property 'StopGestures' for element 'evolution_graph_u'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_r", _view.evolution_graph_u) // EJsS HtmlView.HtmlView Page: declaration of element 't_r'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_r'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_r'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_r'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_r'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_u", _view.evolution_graph_u) // EJsS HtmlView.HtmlView Page: declaration of element 't_u'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_u'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_u'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_u'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_u'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_y", _view.evolution_graph_u) // EJsS HtmlView.HtmlView Page: declaration of element 't_y'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_y'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_y'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_y'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_y'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_y5", _view.evolution_graph_u) // EJsS HtmlView.HtmlView Page: declaration of element 't_y5'
      .setProperty("LineColor","Black") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_y5'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_y5'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_y5'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_y5'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"evolution_graph_p", _view.visualization_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'evolution_graph_p'
      .setProperty("Height",280) // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'evolution_graph_p'
      .setProperty("Width",380) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'evolution_graph_p'
      .setProperty("ShowAreaRectangle",false) // EJsS HtmlView.HtmlView Page: setting property 'ShowAreaRectangle' for element 'evolution_graph_p'
      .setProperty("TitleY","Amplitude (V)") // EJsS HtmlView.HtmlView Page: setting property 'TitleY' for element 'evolution_graph_p'
      .setProperty("TitleX","Time (s)") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'evolution_graph_p'
      .setProperty("AutoScaleY",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'evolution_graph_p'
      .setProperty("AutoScaleX",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'evolution_graph_p'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'evolution_graph_p'
      .setProperty("Title","Pitch: Reference (blue), Control (Green), Output (red)") // EJsS HtmlView.HtmlView Page: setting property 'Title' for element 'evolution_graph_p'
      .setProperty("StopGestures",false) // EJsS HtmlView.HtmlView Page: setting property 'StopGestures' for element 'evolution_graph_p'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_r2", _view.evolution_graph_p) // EJsS HtmlView.HtmlView Page: declaration of element 't_r2'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_r2'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_r2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_r2'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_r2'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_u2", _view.evolution_graph_p) // EJsS HtmlView.HtmlView Page: declaration of element 't_u2'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_u2'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_u2'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_u2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_u2'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_y2", _view.evolution_graph_p) // EJsS HtmlView.HtmlView Page: declaration of element 't_y2'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_y2'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_y2'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_y2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_y2'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"evolution_graph_r", _view.visualization_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'evolution_graph_r'
      .setProperty("Height",280) // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'evolution_graph_r'
      .setProperty("Width",380) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'evolution_graph_r'
      .setProperty("ShowAreaRectangle",false) // EJsS HtmlView.HtmlView Page: setting property 'ShowAreaRectangle' for element 'evolution_graph_r'
      .setProperty("TitleY","Amplitude (V)") // EJsS HtmlView.HtmlView Page: setting property 'TitleY' for element 'evolution_graph_r'
      .setProperty("TitleX","Time (s)") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'evolution_graph_r'
      .setProperty("AutoScaleY",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'evolution_graph_r'
      .setProperty("AutoScaleX",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'evolution_graph_r'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'evolution_graph_r'
      .setProperty("Title","Roll: Reference (blue), Control (Green), Output (red)") // EJsS HtmlView.HtmlView Page: setting property 'Title' for element 'evolution_graph_r'
      .setProperty("StopGestures",false) // EJsS HtmlView.HtmlView Page: setting property 'StopGestures' for element 'evolution_graph_r'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_r22", _view.evolution_graph_r) // EJsS HtmlView.HtmlView Page: declaration of element 't_r22'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_r22'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_r22'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_r22'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_r22'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_u22", _view.evolution_graph_r) // EJsS HtmlView.HtmlView Page: declaration of element 't_u22'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_u22'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_u22'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_u22'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_u22'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_y22", _view.evolution_graph_r) // EJsS HtmlView.HtmlView Page: declaration of element 't_y22'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_y22'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_y22'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_y22'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_y22'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"evolution_graph_y", _view.visualization_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'evolution_graph_y'
      .setProperty("Height",280) // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'evolution_graph_y'
      .setProperty("Width",380) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'evolution_graph_y'
      .setProperty("ShowAreaRectangle",false) // EJsS HtmlView.HtmlView Page: setting property 'ShowAreaRectangle' for element 'evolution_graph_y'
      .setProperty("TitleY","Amplitude (V)") // EJsS HtmlView.HtmlView Page: setting property 'TitleY' for element 'evolution_graph_y'
      .setProperty("TitleX","Time (s)") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'evolution_graph_y'
      .setProperty("AutoScaleY",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'evolution_graph_y'
      .setProperty("AutoScaleX",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'evolution_graph_y'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'evolution_graph_y'
      .setProperty("Title","Yaw: Reference (blue), Control (Green), Output (red)") // EJsS HtmlView.HtmlView Page: setting property 'Title' for element 'evolution_graph_y'
      .setProperty("StopGestures",false) // EJsS HtmlView.HtmlView Page: setting property 'StopGestures' for element 'evolution_graph_y'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_r23", _view.evolution_graph_y) // EJsS HtmlView.HtmlView Page: declaration of element 't_r23'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_r23'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_r23'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_r23'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_r23'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_u23", _view.evolution_graph_y) // EJsS HtmlView.HtmlView Page: declaration of element 't_u23'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_u23'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_u23'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_u23'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_u23'
      ;

    _view._addElement(EJSS_DRAWING2D.traceSet,"t_y23", _view.evolution_graph_y) // EJsS HtmlView.HtmlView Page: declaration of element 't_y23'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 't_y23'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 't_y23'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 't_y23'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 't_y23'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"select_graph", _view.visualization_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'select_graph'
      .setProperty("Display","center") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'select_graph'
      ;

    _view._addElement(EJSS_INTERFACE.checkBox,"camera_button", _view.select_graph) // EJsS HtmlView.HtmlView Page: declaration of element 'camera_button'
      .setProperty("Text","Camera") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'camera_button'
      ;

    _view._addElement(EJSS_INTERFACE.checkBox,"evolution_button_u", _view.select_graph) // EJsS HtmlView.HtmlView Page: declaration of element 'evolution_button_u'
      .setProperty("Text","Drives") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'evolution_button_u'
      ;

    _view._addElement(EJSS_INTERFACE.checkBox,"evolution_button_p", _view.select_graph) // EJsS HtmlView.HtmlView Page: declaration of element 'evolution_button_p'
      .setProperty("Text","Pitch") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'evolution_button_p'
      ;

    _view._addElement(EJSS_INTERFACE.checkBox,"evolution_button_r", _view.select_graph) // EJsS HtmlView.HtmlView Page: declaration of element 'evolution_button_r'
      .setProperty("Text","Roll") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'evolution_button_r'
      ;

    _view._addElement(EJSS_INTERFACE.checkBox,"evolution_button_y", _view.select_graph) // EJsS HtmlView.HtmlView Page: declaration of element 'evolution_button_y'
      .setProperty("Text","Yaw") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'evolution_button_y'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"window_", _view.select_graph) // EJsS HtmlView.HtmlView Page: declaration of element 'window_'
      .setProperty("Text","window (samples):") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'window_'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"windowNumerico", _view.select_graph) // EJsS HtmlView.HtmlView Page: declaration of element 'windowNumerico'
      .setProperty("Format","0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'windowNumerico'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"parametrization_panel", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'parametrization_panel'
      .setProperty("Display","inline-flex") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'parametrization_panel'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_functions", _view.parametrization_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_functions'
      .setProperty("Width",350) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'wave_functions'
      .setProperty("BorderStyle","double") // EJsS HtmlView.HtmlView Page: setting property 'BorderStyle' for element 'wave_functions'
      .setProperty("BorderColor","DarkGray") // EJsS HtmlView.HtmlView Page: setting property 'BorderColor' for element 'wave_functions'
      .setProperty("BorderWidth",5) // EJsS HtmlView.HtmlView Page: setting property 'BorderWidth' for element 'wave_functions'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_general", _view.wave_functions) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_general'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"empty2", _view.wave_general) // EJsS HtmlView.HtmlView Page: declaration of element 'empty2'
      .setProperty("Text","REFERENCE CONFIGURATION") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'empty2'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'empty2'
      .setProperty("Font","normal bold 16px ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'empty2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_labels", _view.wave_functions) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_labels'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"empty", _view.wave_labels) // EJsS HtmlView.HtmlView Page: declaration of element 'empty'
      .setProperty("Text","") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'empty'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'empty'
      .setProperty("Font","normal bold 16px ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'empty'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"REAL_label_input", _view.wave_labels) // EJsS HtmlView.HtmlView Page: declaration of element 'REAL_label_input'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'REAL_label_input'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'REAL_label_input'
      .setProperty("Text","USING") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'REAL_label_input'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'REAL_label_input'
      .setProperty("Font","normal bold 16px ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'REAL_label_input'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"EJS_label_intup", _view.wave_labels) // EJsS HtmlView.HtmlView Page: declaration of element 'EJS_label_intup'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'EJS_label_intup'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'EJS_label_intup'
      .setProperty("Text","TO APPLY") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'EJS_label_intup'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'EJS_label_intup'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_mode", _view.wave_functions) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_mode'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"input_mode", _view.wave_mode) // EJsS HtmlView.HtmlView Page: declaration of element 'input_mode'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'input_mode'
      .setProperty("Text","Type:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'input_mode'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'input_mode'
      ;

    _view._addElement(EJSS_INTERFACE.textField,"mode_REAL", _view.wave_mode) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_REAL'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'mode_REAL'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'mode_REAL'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"mode_EJS", _view.wave_mode) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_EJS'
      .setProperty("Display","inlide") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'mode_EJS'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_pitch", _view.wave_functions) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_pitch'
      .setProperty("Width",350) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'wave_pitch'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_mode2", _view.wave_pitch) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_mode2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"input_mode3", _view.wave_mode2) // EJsS HtmlView.HtmlView Page: declaration of element 'input_mode3'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'input_mode3'
      .setProperty("Text","Type:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'input_mode3'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'input_mode3'
      ;

    _view._addElement(EJSS_INTERFACE.textField,"mode_REAL3", _view.wave_mode2) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_REAL3'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'mode_REAL3'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'mode_REAL3'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"mode_EJS3", _view.wave_mode2) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_EJS3'
      .setProperty("Display","inlide") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'mode_EJS3'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_amp2", _view.wave_pitch) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_amp2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"amp_title2", _view.wave_amp2) // EJsS HtmlView.HtmlView Page: declaration of element 'amp_title2'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'amp_title2'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'amp_title2'
      .setProperty("Text","Amplitude:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'amp_title2'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'amp_title2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"amp_REAL2", _view.wave_amp2) // EJsS HtmlView.HtmlView Page: declaration of element 'amp_REAL2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'amp_REAL2'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'amp_REAL2'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'amp_REAL2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"amp_EJS2", _view.wave_amp2) // EJsS HtmlView.HtmlView Page: declaration of element 'amp_EJS2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'amp_EJS2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_period2", _view.wave_pitch) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_period2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"period_title2", _view.wave_period2) // EJsS HtmlView.HtmlView Page: declaration of element 'period_title2'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'period_title2'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'period_title2'
      .setProperty("Text","Period:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'period_title2'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'period_title2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"period_REAL2", _view.wave_period2) // EJsS HtmlView.HtmlView Page: declaration of element 'period_REAL2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'period_REAL2'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'period_REAL2'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'period_REAL2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"period_EJS2", _view.wave_period2) // EJsS HtmlView.HtmlView Page: declaration of element 'period_EJS2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'period_EJS2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_offsetY2", _view.wave_pitch) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_offsetY2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"offsetY_title2", _view.wave_offsetY2) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetY_title2'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'offsetY_title2'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetY_title2'
      .setProperty("Text","Offset A:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'offsetY_title2'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'offsetY_title2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetY_REAL2", _view.wave_offsetY2) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetY_REAL2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetY_REAL2'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'offsetY_REAL2'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetY_REAL2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetY_EJS2", _view.wave_offsetY2) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetY_EJS2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetY_EJS2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_offsetT2", _view.wave_pitch) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_offsetT2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"offsetT_title2", _view.wave_offsetT2) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetT_title2'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'offsetT_title2'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetT_title2'
      .setProperty("Text","Offset T:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'offsetT_title2'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'offsetT_title2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetT_REAL2", _view.wave_offsetT2) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetT_REAL2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetT_REAL2'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'offsetT_REAL2'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetT_REAL2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetT_EJS2", _view.wave_offsetT2) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetT_EJS2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetT_EJS2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_roll", _view.wave_functions) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_roll'
      .setProperty("Width",350) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'wave_roll'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_mode22", _view.wave_roll) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_mode22'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"input_mode32", _view.wave_mode22) // EJsS HtmlView.HtmlView Page: declaration of element 'input_mode32'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'input_mode32'
      .setProperty("Text","Type:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'input_mode32'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'input_mode32'
      ;

    _view._addElement(EJSS_INTERFACE.textField,"mode_REAL32", _view.wave_mode22) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_REAL32'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'mode_REAL32'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'mode_REAL32'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"mode_EJS32", _view.wave_mode22) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_EJS32'
      .setProperty("Display","inlide") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'mode_EJS32'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_amp22", _view.wave_roll) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_amp22'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"amp_title22", _view.wave_amp22) // EJsS HtmlView.HtmlView Page: declaration of element 'amp_title22'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'amp_title22'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'amp_title22'
      .setProperty("Text","Amplitude:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'amp_title22'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'amp_title22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"amp_REAL22", _view.wave_amp22) // EJsS HtmlView.HtmlView Page: declaration of element 'amp_REAL22'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'amp_REAL22'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'amp_REAL22'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'amp_REAL22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"amp_EJS22", _view.wave_amp22) // EJsS HtmlView.HtmlView Page: declaration of element 'amp_EJS22'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'amp_EJS22'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_period22", _view.wave_roll) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_period22'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"period_title22", _view.wave_period22) // EJsS HtmlView.HtmlView Page: declaration of element 'period_title22'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'period_title22'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'period_title22'
      .setProperty("Text","Period:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'period_title22'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'period_title22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"period_REAL22", _view.wave_period22) // EJsS HtmlView.HtmlView Page: declaration of element 'period_REAL22'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'period_REAL22'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'period_REAL22'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'period_REAL22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"period_EJS22", _view.wave_period22) // EJsS HtmlView.HtmlView Page: declaration of element 'period_EJS22'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'period_EJS22'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_offsetY22", _view.wave_roll) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_offsetY22'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"offsetY_title22", _view.wave_offsetY22) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetY_title22'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'offsetY_title22'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetY_title22'
      .setProperty("Text","Offset A:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'offsetY_title22'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'offsetY_title22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetY_REAL22", _view.wave_offsetY22) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetY_REAL22'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetY_REAL22'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'offsetY_REAL22'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetY_REAL22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetY_EJS22", _view.wave_offsetY22) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetY_EJS22'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetY_EJS22'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_offsetT22", _view.wave_roll) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_offsetT22'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"offsetT_title22", _view.wave_offsetT22) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetT_title22'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'offsetT_title22'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetT_title22'
      .setProperty("Text","Offset T:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'offsetT_title22'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'offsetT_title22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetT_REAL22", _view.wave_offsetT22) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetT_REAL22'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetT_REAL22'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'offsetT_REAL22'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetT_REAL22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetT_EJS22", _view.wave_offsetT22) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetT_EJS22'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetT_EJS22'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_yaw", _view.wave_functions) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_yaw'
      .setProperty("Width",350) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'wave_yaw'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_mode222", _view.wave_yaw) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_mode222'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"input_mode322", _view.wave_mode222) // EJsS HtmlView.HtmlView Page: declaration of element 'input_mode322'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'input_mode322'
      .setProperty("Text","Type:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'input_mode322'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'input_mode322'
      ;

    _view._addElement(EJSS_INTERFACE.textField,"mode_REAL322", _view.wave_mode222) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_REAL322'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'mode_REAL322'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'mode_REAL322'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"mode_EJS322", _view.wave_mode222) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_EJS322'
      .setProperty("Display","inlide") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'mode_EJS322'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_amp222", _view.wave_yaw) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_amp222'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"amp_title222", _view.wave_amp222) // EJsS HtmlView.HtmlView Page: declaration of element 'amp_title222'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'amp_title222'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'amp_title222'
      .setProperty("Text","Amplitude:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'amp_title222'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'amp_title222'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"amp_REAL222", _view.wave_amp222) // EJsS HtmlView.HtmlView Page: declaration of element 'amp_REAL222'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'amp_REAL222'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'amp_REAL222'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'amp_REAL222'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"amp_EJS222", _view.wave_amp222) // EJsS HtmlView.HtmlView Page: declaration of element 'amp_EJS222'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'amp_EJS222'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_period222", _view.wave_yaw) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_period222'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"period_title222", _view.wave_period222) // EJsS HtmlView.HtmlView Page: declaration of element 'period_title222'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'period_title222'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'period_title222'
      .setProperty("Text","Period:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'period_title222'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'period_title222'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"period_REAL222", _view.wave_period222) // EJsS HtmlView.HtmlView Page: declaration of element 'period_REAL222'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'period_REAL222'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'period_REAL222'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'period_REAL222'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"period_EJS222", _view.wave_period222) // EJsS HtmlView.HtmlView Page: declaration of element 'period_EJS222'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'period_EJS222'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_offsetY222", _view.wave_yaw) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_offsetY222'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"offsetY_title222", _view.wave_offsetY222) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetY_title222'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'offsetY_title222'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetY_title222'
      .setProperty("Text","Offset A:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'offsetY_title222'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'offsetY_title222'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetY_REAL222", _view.wave_offsetY222) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetY_REAL222'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetY_REAL222'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'offsetY_REAL222'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetY_REAL222'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetY_EJS222", _view.wave_offsetY222) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetY_EJS222'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetY_EJS222'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"wave_offsetT222", _view.wave_yaw) // EJsS HtmlView.HtmlView Page: declaration of element 'wave_offsetT222'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"offsetT_title222", _view.wave_offsetT222) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetT_title222'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'offsetT_title222'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetT_title222'
      .setProperty("Text","Offset T:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'offsetT_title222'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'offsetT_title222'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetT_REAL222", _view.wave_offsetT222) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetT_REAL222'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetT_REAL222'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'offsetT_REAL222'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'offsetT_REAL222'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"offsetT_EJS222", _view.wave_offsetT222) // EJsS HtmlView.HtmlView Page: declaration of element 'offsetT_EJS222'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'offsetT_EJS222'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel", _view.parametrization_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel'
      .setProperty("Width",450) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'controller_panel'
      .setProperty("BorderStyle","double") // EJsS HtmlView.HtmlView Page: setting property 'BorderStyle' for element 'controller_panel'
      .setProperty("BorderColor","DarkGray") // EJsS HtmlView.HtmlView Page: setting property 'BorderColor' for element 'controller_panel'
      .setProperty("BorderWidth",5) // EJsS HtmlView.HtmlView Page: setting property 'BorderWidth' for element 'controller_panel'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_general", _view.controller_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_general'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"empty22", _view.controller_general) // EJsS HtmlView.HtmlView Page: declaration of element 'empty22'
      .setProperty("Text","CONTROLLER CONFIGURATION") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'empty22'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'empty22'
      .setProperty("Font","normal bold 16px ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'empty22'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_labels", _view.controller_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_labels'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"empty3", _view.controller_panel_labels) // EJsS HtmlView.HtmlView Page: declaration of element 'empty3'
      .setProperty("Text","") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'empty3'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'empty3'
      .setProperty("Font","normal bold 16px ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'empty3'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"REAL_label_controller", _view.controller_panel_labels) // EJsS HtmlView.HtmlView Page: declaration of element 'REAL_label_controller'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'REAL_label_controller'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'REAL_label_controller'
      .setProperty("Text","USING") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'REAL_label_controller'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'REAL_label_controller'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"EJS_label_controller", _view.controller_panel_labels) // EJsS HtmlView.HtmlView Page: declaration of element 'EJS_label_controller'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'EJS_label_controller'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'EJS_label_controller'
      .setProperty("Text","TO APPLY") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'EJS_label_controller'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'EJS_label_controller'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_mode", _view.controller_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_mode'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"input_mode2", _view.controller_mode) // EJsS HtmlView.HtmlView Page: declaration of element 'input_mode2'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'input_mode2'
      .setProperty("Text","Type:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'input_mode2'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'input_mode2'
      ;

    _view._addElement(EJSS_INTERFACE.textField,"mode_REAL2", _view.controller_mode) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_REAL2'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'mode_REAL2'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'mode_REAL2'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"mode_EJS2", _view.controller_mode) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_EJS2'
      .setProperty("Display","inlime") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'mode_EJS2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_PIDs", _view.controller_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_PIDs'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_modePID", _view.controller_PIDs) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_modePID'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"input_mode22", _view.controller_modePID) // EJsS HtmlView.HtmlView Page: declaration of element 'input_mode22'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'input_mode22'
      .setProperty("Text","Type:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'input_mode22'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'input_mode22'
      ;

    _view._addElement(EJSS_INTERFACE.textField,"mode_REAL22", _view.controller_modePID) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_REAL22'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'mode_REAL22'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'mode_REAL22'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"mode_EJS22", _view.controller_modePID) // EJsS HtmlView.HtmlView Page: declaration of element 'mode_EJS22'
      .setProperty("Display","inlime") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'mode_EJS22'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_PIDpr", _view.controller_PIDs) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_PIDpr'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_kp", _view.controller_PIDpr) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_kp'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"kp_title", _view.controller_panel_kp) // EJsS HtmlView.HtmlView Page: declaration of element 'kp_title'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'kp_title'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kp_title'
      .setProperty("Text","Kp:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'kp_title'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'kp_title'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kp_REAL", _view.controller_panel_kp) // EJsS HtmlView.HtmlView Page: declaration of element 'kp_REAL'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kp_REAL'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'kp_REAL'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kp_REAL'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kp_EJS", _view.controller_panel_kp) // EJsS HtmlView.HtmlView Page: declaration of element 'kp_EJS'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kp_EJS'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_ki", _view.controller_PIDpr) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_ki'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"ki_title", _view.controller_panel_ki) // EJsS HtmlView.HtmlView Page: declaration of element 'ki_title'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'ki_title'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'ki_title'
      .setProperty("Text","Ti:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'ki_title'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'ki_title'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"ki_REAL", _view.controller_panel_ki) // EJsS HtmlView.HtmlView Page: declaration of element 'ki_REAL'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'ki_REAL'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'ki_REAL'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'ki_REAL'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"ki_EJS", _view.controller_panel_ki) // EJsS HtmlView.HtmlView Page: declaration of element 'ki_EJS'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'ki_EJS'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_kd", _view.controller_PIDpr) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_kd'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"kd_title", _view.controller_panel_kd) // EJsS HtmlView.HtmlView Page: declaration of element 'kd_title'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'kd_title'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kd_title'
      .setProperty("Text","Td:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'kd_title'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'kd_title'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kd_REAL", _view.controller_panel_kd) // EJsS HtmlView.HtmlView Page: declaration of element 'kd_REAL'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kd_REAL'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'kd_REAL'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kd_REAL'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kd_EJS", _view.controller_panel_kd) // EJsS HtmlView.HtmlView Page: declaration of element 'kd_EJS'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kd_EJS'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_n", _view.controller_PIDpr) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_n'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"n_title", _view.controller_panel_n) // EJsS HtmlView.HtmlView Page: declaration of element 'n_title'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'n_title'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'n_title'
      .setProperty("Text","N:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'n_title'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'n_title'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"n_REAL", _view.controller_panel_n) // EJsS HtmlView.HtmlView Page: declaration of element 'n_REAL'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'n_REAL'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'n_REAL'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'n_REAL'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"n_EJS", _view.controller_panel_n) // EJsS HtmlView.HtmlView Page: declaration of element 'n_EJS'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'n_EJS'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_PIDy", _view.controller_PIDs) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_PIDy'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_kp2", _view.controller_PIDy) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_kp2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"kp_title3", _view.controller_panel_kp2) // EJsS HtmlView.HtmlView Page: declaration of element 'kp_title3'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'kp_title3'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kp_title3'
      .setProperty("Text","Kp:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'kp_title3'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'kp_title3'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kp_REAL2", _view.controller_panel_kp2) // EJsS HtmlView.HtmlView Page: declaration of element 'kp_REAL2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kp_REAL2'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'kp_REAL2'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kp_REAL2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kp_EJS2", _view.controller_panel_kp2) // EJsS HtmlView.HtmlView Page: declaration of element 'kp_EJS2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kp_EJS2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_ki2", _view.controller_PIDy) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_ki2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"ki_title2", _view.controller_panel_ki2) // EJsS HtmlView.HtmlView Page: declaration of element 'ki_title2'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'ki_title2'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'ki_title2'
      .setProperty("Text","Ti:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'ki_title2'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'ki_title2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"ki_REAL2", _view.controller_panel_ki2) // EJsS HtmlView.HtmlView Page: declaration of element 'ki_REAL2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'ki_REAL2'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'ki_REAL2'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'ki_REAL2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"ki_EJS2", _view.controller_panel_ki2) // EJsS HtmlView.HtmlView Page: declaration of element 'ki_EJS2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'ki_EJS2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_kd2", _view.controller_PIDy) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_kd2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"kd_title2", _view.controller_panel_kd2) // EJsS HtmlView.HtmlView Page: declaration of element 'kd_title2'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'kd_title2'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kd_title2'
      .setProperty("Text","Td:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'kd_title2'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'kd_title2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kd_REAL2", _view.controller_panel_kd2) // EJsS HtmlView.HtmlView Page: declaration of element 'kd_REAL2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kd_REAL2'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'kd_REAL2'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kd_REAL2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kd_EJS2", _view.controller_panel_kd2) // EJsS HtmlView.HtmlView Page: declaration of element 'kd_EJS2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kd_EJS2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_n2", _view.controller_PIDy) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_n2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"n_title2", _view.controller_panel_n2) // EJsS HtmlView.HtmlView Page: declaration of element 'n_title2'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'n_title2'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'n_title2'
      .setProperty("Text","N:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'n_title2'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'n_title2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"n_REAL2", _view.controller_panel_n2) // EJsS HtmlView.HtmlView Page: declaration of element 'n_REAL2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'n_REAL2'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'n_REAL2'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'n_REAL2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"n_EJS2", _view.controller_panel_n2) // EJsS HtmlView.HtmlView Page: declaration of element 'n_EJS2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'n_EJS2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_FL", _view.controller_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_FL'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_K", _view.controller_FL) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_K'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"kp_title2", _view.controller_panel_K) // EJsS HtmlView.HtmlView Page: declaration of element 'kp_title2'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'kp_title2'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kp_title2'
      .setProperty("Text","F:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'kp_title2'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'kp_title2'
      ;

    _view._addElement(EJSS_INTERFACE.textField,"F_REAL", _view.controller_panel_K) // EJsS HtmlView.HtmlView Page: declaration of element 'F_REAL'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'F_REAL'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'F_REAL'
      ;

    _view._addElement(EJSS_INTERFACE.textField,"F_EJS", _view.controller_panel_K) // EJsS HtmlView.HtmlView Page: declaration of element 'F_EJS'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'F_EJS'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_SL", _view.controller_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_SL'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_kp3", _view.controller_SL) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_kp3'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"kp_title4", _view.controller_panel_kp3) // EJsS HtmlView.HtmlView Page: declaration of element 'kp_title4'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'kp_title4'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kp_title4'
      .setProperty("Text","k1:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'kp_title4'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'kp_title4'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kp_REAL3", _view.controller_panel_kp3) // EJsS HtmlView.HtmlView Page: declaration of element 'kp_REAL3'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kp_REAL3'
      .setProperty("Value",1.5) // EJsS HtmlView.HtmlView Page: setting property 'Value' for element 'kp_REAL3'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'kp_REAL3'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kp_REAL3'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kp_EJS3", _view.controller_panel_kp3) // EJsS HtmlView.HtmlView Page: declaration of element 'kp_EJS3'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kp_EJS3'
      .setProperty("Value",1.5) // EJsS HtmlView.HtmlView Page: setting property 'Value' for element 'kp_EJS3'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_ki3", _view.controller_SL) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_ki3'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"ki_title3", _view.controller_panel_ki3) // EJsS HtmlView.HtmlView Page: declaration of element 'ki_title3'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'ki_title3'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'ki_title3'
      .setProperty("Text","k2:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'ki_title3'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'ki_title3'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"ki_REAL3", _view.controller_panel_ki3) // EJsS HtmlView.HtmlView Page: declaration of element 'ki_REAL3'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'ki_REAL3'
      .setProperty("Value",7) // EJsS HtmlView.HtmlView Page: setting property 'Value' for element 'ki_REAL3'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'ki_REAL3'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'ki_REAL3'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"ki_EJS3", _view.controller_panel_ki3) // EJsS HtmlView.HtmlView Page: declaration of element 'ki_EJS3'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'ki_EJS3'
      .setProperty("Value",7) // EJsS HtmlView.HtmlView Page: setting property 'Value' for element 'ki_EJS3'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_kd3", _view.controller_SL) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_kd3'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"kd_title3", _view.controller_panel_kd3) // EJsS HtmlView.HtmlView Page: declaration of element 'kd_title3'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'kd_title3'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kd_title3'
      .setProperty("Text","l1:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'kd_title3'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'kd_title3'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kd_REAL3", _view.controller_panel_kd3) // EJsS HtmlView.HtmlView Page: declaration of element 'kd_REAL3'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kd_REAL3'
      .setProperty("Value",1.5) // EJsS HtmlView.HtmlView Page: setting property 'Value' for element 'kd_REAL3'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'kd_REAL3'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kd_REAL3'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kd_EJS3", _view.controller_panel_kd3) // EJsS HtmlView.HtmlView Page: declaration of element 'kd_EJS3'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kd_EJS3'
      .setProperty("Value",1.5) // EJsS HtmlView.HtmlView Page: setting property 'Value' for element 'kd_EJS3'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controller_panel_n3", _view.controller_SL) // EJsS HtmlView.HtmlView Page: declaration of element 'controller_panel_n3'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"n_title3", _view.controller_panel_n3) // EJsS HtmlView.HtmlView Page: declaration of element 'n_title3'
      .setProperty("TextAlign","center") // EJsS HtmlView.HtmlView Page: setting property 'TextAlign' for element 'n_title3'
      .setProperty("Foreground","Black") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'n_title3'
      .setProperty("Text","l2:") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'n_title3'
      .setProperty("Disabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Disabled' for element 'n_title3'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"n_REAL3", _view.controller_panel_n3) // EJsS HtmlView.HtmlView Page: declaration of element 'n_REAL3'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'n_REAL3'
      .setProperty("Value",2) // EJsS HtmlView.HtmlView Page: setting property 'Value' for element 'n_REAL3'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'n_REAL3'
      .setProperty("Foreground","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'n_REAL3'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"n_EJS3", _view.controller_panel_n3) // EJsS HtmlView.HtmlView Page: declaration of element 'n_EJS3'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'n_EJS3'
      .setProperty("Value",2) // EJsS HtmlView.HtmlView Page: setting property 'Value' for element 'n_EJS3'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"control_panel", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'control_panel'
      ;

    _view._addElement(EJSS_INTERFACE.separator,"separator", _view.control_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'separator'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'separator'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"play_state", _view.control_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'play_state'
      .setProperty("ImageOnUrl","/org/opensourcephysics/resources/controls/images/play.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOnUrl' for element 'play_state'
      .setProperty("ImageOffUrl","/org/opensourcephysics/resources/controls/images/play.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOffUrl' for element 'play_state'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"pause_button", _view.control_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'pause_button'
      .setProperty("ImageOnUrl","/org/opensourcephysics/resources/controls/images/pause.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOnUrl' for element 'pause_button'
      .setProperty("ImageOffUrl","/org/opensourcephysics/resources/controls/images/pause.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOffUrl' for element 'pause_button'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"reset_button", _view.control_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'reset_button'
      .setProperty("ImageOnUrl","/org/opensourcephysics/resources/controls/images/reset.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOnUrl' for element 'reset_button'
      .setProperty("ImageOffUrl","/org/opensourcephysics/resources/controls/images/reset.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOffUrl' for element 'reset_button'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"update_button", _view.control_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'update_button'
      .setProperty("State",true) // EJsS HtmlView.HtmlView Page: setting property 'State' for element 'update_button'
      .setProperty("ImageOnUrl","/org/opensourcephysics/resources/controls/images/reset2.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOnUrl' for element 'update_button'
      .setProperty("ImageOffUrl","/org/opensourcephysics/resources/controls/images/reset2.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOffUrl' for element 'update_button'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"connect_button", _view.control_panel) // EJsS HtmlView.HtmlView Page: declaration of element 'connect_button'
      .setProperty("ImageOnUrl","/org/opensourcephysics/resources/controls/images/power_on.png") // EJsS HtmlView.HtmlView Page: setting property 'ImageOnUrl' for element 'connect_button'
      .setProperty("ImageOffUrl","/org/opensourcephysics/resources/controls/images/power_off.png") // EJsS HtmlView.HtmlView Page: setting property 'ImageOffUrl' for element 'connect_button'
      ;

  };

  return _view;
}


//--><!]]></script>
  </head>
  <body>
  
  
      <div class="logout-block">
	<a href="/select">
		<img src="/images/user_icon.png" alt="REAL" height="35" width="35">
	</a>
	<span> <%= user.username %> </span>
	<a href="/logout">
   	<button>Logout</button>
    </a>
  </div>
  
    <div role="button" id="_topFrame" style="text-align:center"></div>
  <div id="metadata" class="metadata">
    <br />
    <div id="title_author">
      <hr />
      <b>Title and author:</b>
      <p>
      </p>
      <p>
 Author name
      </p>
    </div>
    <hr />
    <p></p>
    <div id="copyright_message">
      <div class="cc_left"  style="float:left">&#169; 2016, Author name.</div>
      <div class="cc_right" style="float:right">    Released under a <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en_US"> <img alt="Creative Commons Attribution-NonCommercial-ShareAlike" src="_ejs_library/images/cc_icon.png" /> </a> license.</div>
    </div>
  </div>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
      var _model;
      window.addEventListener('load',
        function () { 
          _model =  new quad_practice_20("_topFrame","_ejs_library/",null);
          TextResizeDetector.TARGET_ELEMENT_ID = '_topFrame';
          TextResizeDetector.USER_INIT_FUNC = function () {
            var iBase = TextResizeDetector.addEventListener(function(e,args) {
              _model._fontResized(args[0].iBase,args[0].iSize,args[0].iDelta);
              },null);
            _model._fontResized(iBase);
          };
        }, false);
      window.addEventListener('resize', function () { _model._resized(window.innerWidth,window.innerHeight); }, false);
      window.addEventListener('scroll', function () { _model._resized(window.innerWidth,window.innerHeight); }, false);
    //--><!]]></script>
  </body>
</html>
